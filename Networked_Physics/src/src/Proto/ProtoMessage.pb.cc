// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoMessage.proto

#include "ProtoMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace ProtobufMessage {
class UDPMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UDPMessage>
      _instance;
  const ::ProtobufMessage::LockStepMessage* lockstepmsg_;
  const ::ProtobufMessage::SnapShotMessage* snapshotmsg_;
  const ::ProtobufMessage::StateMessage* statemsg_;
  const ::ProtobufMessage::UDPStringMessage* udpstringmsg_;
  const ::ProtobufMessage::SnapShotInputMessage* snapshotinputmsg_;
  const ::ProtobufMessage::StateACKPacket* stateack_;
  const ::ProtobufMessage::PredictionReconciliationMessage* predictionreconciliationmsg_;
  const ::ProtobufMessage::PredictionReconciliationInputMessage* predictionreconciliationinputmsg_;
  const ::ProtobufMessage::ServerTimeRequest* servertimerequestmsg_;
} _UDPMessage_default_instance_;
class LockStepMessage_InputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LockStepMessage_Input>
      _instance;
} _LockStepMessage_Input_default_instance_;
class LockStepMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<LockStepMessage>
      _instance;
} _LockStepMessage_default_instance_;
class SnapShotMessage_ObjectstateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SnapShotMessage_Objectstate>
      _instance;
} _SnapShotMessage_Objectstate_default_instance_;
class SnapShotMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SnapShotMessage>
      _instance;
} _SnapShotMessage_default_instance_;
class SnapShotInputMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<SnapShotInputMessage>
      _instance;
} _SnapShotInputMessage_default_instance_;
class UDPMessageSnapshotDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UDPMessageSnapshot>
      _instance;
} _UDPMessageSnapshot_default_instance_;
class StateMessage_InputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StateMessage_Input>
      _instance;
} _StateMessage_Input_default_instance_;
class StateMessage_ObjectstateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StateMessage_Objectstate>
      _instance;
} _StateMessage_Objectstate_default_instance_;
class StateMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StateMessage>
      _instance;
} _StateMessage_default_instance_;
class UDPStringMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<UDPStringMessage>
      _instance;
} _UDPStringMessage_default_instance_;
class StateACKPacketDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StateACKPacket>
      _instance;
} _StateACKPacket_default_instance_;
class TCPMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TCPMessage>
      _instance;
} _TCPMessage_default_instance_;
class PredictionReconciliationMessage_InputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PredictionReconciliationMessage_Input>
      _instance;
} _PredictionReconciliationMessage_Input_default_instance_;
class PredictionReconciliationMessage_ObjectstateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PredictionReconciliationMessage_Objectstate>
      _instance;
} _PredictionReconciliationMessage_Objectstate_default_instance_;
class PredictionReconciliationMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PredictionReconciliationMessage>
      _instance;
} _PredictionReconciliationMessage_default_instance_;
class PredictionReconciliationInputMessage_InputDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PredictionReconciliationInputMessage_Input>
      _instance;
} _PredictionReconciliationInputMessage_Input_default_instance_;
class PredictionReconciliationInputMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PredictionReconciliationInputMessage>
      _instance;
} _PredictionReconciliationInputMessage_default_instance_;
class ServerTimeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ServerTimeRequest>
      _instance;
} _ServerTimeRequest_default_instance_;
}  // namespace ProtobufMessage
namespace protobuf_ProtoMessage_2eproto {
void InitDefaultsUDPMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ProtoMessage_2eproto::InitDefaultsLockStepMessage();
  protobuf_ProtoMessage_2eproto::InitDefaultsSnapShotMessage();
  protobuf_ProtoMessage_2eproto::InitDefaultsStateMessage();
  protobuf_ProtoMessage_2eproto::InitDefaultsUDPStringMessage();
  protobuf_ProtoMessage_2eproto::InitDefaultsSnapShotInputMessage();
  protobuf_ProtoMessage_2eproto::InitDefaultsStateACKPacket();
  protobuf_ProtoMessage_2eproto::InitDefaultsPredictionReconciliationMessage();
  protobuf_ProtoMessage_2eproto::InitDefaultsPredictionReconciliationInputMessage();
  protobuf_ProtoMessage_2eproto::InitDefaultsServerTimeRequest();
  {
    void* ptr = &::ProtobufMessage::_UDPMessage_default_instance_;
    new (ptr) ::ProtobufMessage::UDPMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtobufMessage::UDPMessage::InitAsDefaultInstance();
}

void InitDefaultsUDPMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUDPMessageImpl);
}

void InitDefaultsLockStepMessage_InputImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtobufMessage::_LockStepMessage_Input_default_instance_;
    new (ptr) ::ProtobufMessage::LockStepMessage_Input();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtobufMessage::LockStepMessage_Input::InitAsDefaultInstance();
}

void InitDefaultsLockStepMessage_Input() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLockStepMessage_InputImpl);
}

void InitDefaultsLockStepMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ProtoMessage_2eproto::InitDefaultsLockStepMessage_Input();
  {
    void* ptr = &::ProtobufMessage::_LockStepMessage_default_instance_;
    new (ptr) ::ProtobufMessage::LockStepMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtobufMessage::LockStepMessage::InitAsDefaultInstance();
}

void InitDefaultsLockStepMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLockStepMessageImpl);
}

void InitDefaultsSnapShotMessage_ObjectstateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtobufMessage::_SnapShotMessage_Objectstate_default_instance_;
    new (ptr) ::ProtobufMessage::SnapShotMessage_Objectstate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtobufMessage::SnapShotMessage_Objectstate::InitAsDefaultInstance();
}

void InitDefaultsSnapShotMessage_Objectstate() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSnapShotMessage_ObjectstateImpl);
}

void InitDefaultsSnapShotMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ProtoMessage_2eproto::InitDefaultsSnapShotMessage_Objectstate();
  {
    void* ptr = &::ProtobufMessage::_SnapShotMessage_default_instance_;
    new (ptr) ::ProtobufMessage::SnapShotMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtobufMessage::SnapShotMessage::InitAsDefaultInstance();
}

void InitDefaultsSnapShotMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSnapShotMessageImpl);
}

void InitDefaultsSnapShotInputMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtobufMessage::_SnapShotInputMessage_default_instance_;
    new (ptr) ::ProtobufMessage::SnapShotInputMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtobufMessage::SnapShotInputMessage::InitAsDefaultInstance();
}

void InitDefaultsSnapShotInputMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsSnapShotInputMessageImpl);
}

void InitDefaultsUDPMessageSnapshotImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtobufMessage::_UDPMessageSnapshot_default_instance_;
    new (ptr) ::ProtobufMessage::UDPMessageSnapshot();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtobufMessage::UDPMessageSnapshot::InitAsDefaultInstance();
}

void InitDefaultsUDPMessageSnapshot() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUDPMessageSnapshotImpl);
}

void InitDefaultsStateMessage_InputImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtobufMessage::_StateMessage_Input_default_instance_;
    new (ptr) ::ProtobufMessage::StateMessage_Input();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtobufMessage::StateMessage_Input::InitAsDefaultInstance();
}

void InitDefaultsStateMessage_Input() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStateMessage_InputImpl);
}

void InitDefaultsStateMessage_ObjectstateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtobufMessage::_StateMessage_Objectstate_default_instance_;
    new (ptr) ::ProtobufMessage::StateMessage_Objectstate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtobufMessage::StateMessage_Objectstate::InitAsDefaultInstance();
}

void InitDefaultsStateMessage_Objectstate() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStateMessage_ObjectstateImpl);
}

void InitDefaultsStateMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ProtoMessage_2eproto::InitDefaultsStateMessage_Input();
  protobuf_ProtoMessage_2eproto::InitDefaultsStateMessage_Objectstate();
  {
    void* ptr = &::ProtobufMessage::_StateMessage_default_instance_;
    new (ptr) ::ProtobufMessage::StateMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtobufMessage::StateMessage::InitAsDefaultInstance();
}

void InitDefaultsStateMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStateMessageImpl);
}

void InitDefaultsUDPStringMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtobufMessage::_UDPStringMessage_default_instance_;
    new (ptr) ::ProtobufMessage::UDPStringMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtobufMessage::UDPStringMessage::InitAsDefaultInstance();
}

void InitDefaultsUDPStringMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsUDPStringMessageImpl);
}

void InitDefaultsStateACKPacketImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtobufMessage::_StateACKPacket_default_instance_;
    new (ptr) ::ProtobufMessage::StateACKPacket();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtobufMessage::StateACKPacket::InitAsDefaultInstance();
}

void InitDefaultsStateACKPacket() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStateACKPacketImpl);
}

void InitDefaultsTCPMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtobufMessage::_TCPMessage_default_instance_;
    new (ptr) ::ProtobufMessage::TCPMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtobufMessage::TCPMessage::InitAsDefaultInstance();
}

void InitDefaultsTCPMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTCPMessageImpl);
}

void InitDefaultsPredictionReconciliationMessage_InputImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtobufMessage::_PredictionReconciliationMessage_Input_default_instance_;
    new (ptr) ::ProtobufMessage::PredictionReconciliationMessage_Input();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtobufMessage::PredictionReconciliationMessage_Input::InitAsDefaultInstance();
}

void InitDefaultsPredictionReconciliationMessage_Input() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPredictionReconciliationMessage_InputImpl);
}

void InitDefaultsPredictionReconciliationMessage_ObjectstateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtobufMessage::_PredictionReconciliationMessage_Objectstate_default_instance_;
    new (ptr) ::ProtobufMessage::PredictionReconciliationMessage_Objectstate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtobufMessage::PredictionReconciliationMessage_Objectstate::InitAsDefaultInstance();
}

void InitDefaultsPredictionReconciliationMessage_Objectstate() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPredictionReconciliationMessage_ObjectstateImpl);
}

void InitDefaultsPredictionReconciliationMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ProtoMessage_2eproto::InitDefaultsPredictionReconciliationMessage_Input();
  protobuf_ProtoMessage_2eproto::InitDefaultsPredictionReconciliationMessage_Objectstate();
  {
    void* ptr = &::ProtobufMessage::_PredictionReconciliationMessage_default_instance_;
    new (ptr) ::ProtobufMessage::PredictionReconciliationMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtobufMessage::PredictionReconciliationMessage::InitAsDefaultInstance();
}

void InitDefaultsPredictionReconciliationMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPredictionReconciliationMessageImpl);
}

void InitDefaultsPredictionReconciliationInputMessage_InputImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtobufMessage::_PredictionReconciliationInputMessage_Input_default_instance_;
    new (ptr) ::ProtobufMessage::PredictionReconciliationInputMessage_Input();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtobufMessage::PredictionReconciliationInputMessage_Input::InitAsDefaultInstance();
}

void InitDefaultsPredictionReconciliationInputMessage_Input() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPredictionReconciliationInputMessage_InputImpl);
}

void InitDefaultsPredictionReconciliationInputMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ProtoMessage_2eproto::InitDefaultsPredictionReconciliationInputMessage_Input();
  {
    void* ptr = &::ProtobufMessage::_PredictionReconciliationInputMessage_default_instance_;
    new (ptr) ::ProtobufMessage::PredictionReconciliationInputMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtobufMessage::PredictionReconciliationInputMessage::InitAsDefaultInstance();
}

void InitDefaultsPredictionReconciliationInputMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPredictionReconciliationInputMessageImpl);
}

void InitDefaultsServerTimeRequestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::ProtobufMessage::_ServerTimeRequest_default_instance_;
    new (ptr) ::ProtobufMessage::ServerTimeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtobufMessage::ServerTimeRequest::InitAsDefaultInstance();
}

void InitDefaultsServerTimeRequest() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsServerTimeRequestImpl);
}

::google::protobuf::Metadata file_level_metadata[19];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::UDPMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::UDPMessage, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::ProtobufMessage::UDPMessageDefaultTypeInternal, lockstepmsg_),
  offsetof(::ProtobufMessage::UDPMessageDefaultTypeInternal, snapshotmsg_),
  offsetof(::ProtobufMessage::UDPMessageDefaultTypeInternal, statemsg_),
  offsetof(::ProtobufMessage::UDPMessageDefaultTypeInternal, udpstringmsg_),
  offsetof(::ProtobufMessage::UDPMessageDefaultTypeInternal, snapshotinputmsg_),
  offsetof(::ProtobufMessage::UDPMessageDefaultTypeInternal, stateack_),
  offsetof(::ProtobufMessage::UDPMessageDefaultTypeInternal, predictionreconciliationmsg_),
  offsetof(::ProtobufMessage::UDPMessageDefaultTypeInternal, predictionreconciliationinputmsg_),
  offsetof(::ProtobufMessage::UDPMessageDefaultTypeInternal, servertimerequestmsg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::UDPMessage, msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::LockStepMessage_Input, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::LockStepMessage_Input, left_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::LockStepMessage_Input, right_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::LockStepMessage_Input, up_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::LockStepMessage_Input, down_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::LockStepMessage_Input, space_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::LockStepMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::LockStepMessage, inputs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::SnapShotMessage_Objectstate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::SnapShotMessage_Objectstate, interacting_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::SnapShotMessage_Objectstate, positionx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::SnapShotMessage_Objectstate, positiony_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::SnapShotMessage_Objectstate, angle_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::SnapShotMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::SnapShotMessage, netid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::SnapShotMessage, sequence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::SnapShotMessage, deltapacketindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::SnapShotMessage, initial_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::SnapShotMessage, inputack_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::SnapShotMessage, objectsnapshot_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::SnapShotInputMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::SnapShotInputMessage, sequence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::SnapShotInputMessage, left_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::SnapShotInputMessage, right_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::SnapShotInputMessage, up_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::SnapShotInputMessage, down_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::SnapShotInputMessage, space_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::UDPMessageSnapshot, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::UDPMessageSnapshot, netid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::UDPMessageSnapshot, positionx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::UDPMessageSnapshot, positiony_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::UDPMessageSnapshot, angle_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::StateMessage_Input, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::StateMessage_Input, left_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::StateMessage_Input, right_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::StateMessage_Input, up_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::StateMessage_Input, down_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::StateMessage_Input, space_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::StateMessage_Objectstate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::StateMessage_Objectstate, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::StateMessage_Objectstate, absolutevalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::StateMessage_Objectstate, basesequence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::StateMessage_Objectstate, positionx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::StateMessage_Objectstate, positiony_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::StateMessage_Objectstate, angle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::StateMessage_Objectstate, linear_velocityx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::StateMessage_Objectstate, linear_velocityy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::StateMessage_Objectstate, angular_velocity_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::StateMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::StateMessage, netid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::StateMessage, sequence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::StateMessage, baseacksequence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::StateMessage, inputs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::StateMessage, objectstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::StateMessage, timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::UDPStringMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::UDPStringMessage, msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::StateACKPacket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::StateACKPacket, netid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::StateACKPacket, acksequence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::StateACKPacket, ackbits_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::TCPMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::TCPMessage, msg_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::PredictionReconciliationMessage_Input, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::PredictionReconciliationMessage_Input, left_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::PredictionReconciliationMessage_Input, right_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::PredictionReconciliationMessage_Input, up_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::PredictionReconciliationMessage_Input, down_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::PredictionReconciliationMessage_Input, space_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::PredictionReconciliationMessage_Objectstate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::PredictionReconciliationMessage_Objectstate, positionx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::PredictionReconciliationMessage_Objectstate, positiony_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::PredictionReconciliationMessage_Objectstate, angle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::PredictionReconciliationMessage_Objectstate, linear_velocityx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::PredictionReconciliationMessage_Objectstate, linear_velocityy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::PredictionReconciliationMessage_Objectstate, angular_velocity_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::PredictionReconciliationMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::PredictionReconciliationMessage, netid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::PredictionReconciliationMessage, sequence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::PredictionReconciliationMessage, inputs_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::PredictionReconciliationMessage, objectstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::PredictionReconciliationMessage, timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::PredictionReconciliationInputMessage_Input, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::PredictionReconciliationInputMessage_Input, left_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::PredictionReconciliationInputMessage_Input, right_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::PredictionReconciliationInputMessage_Input, up_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::PredictionReconciliationInputMessage_Input, down_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::PredictionReconciliationInputMessage_Input, space_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::PredictionReconciliationInputMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::PredictionReconciliationInputMessage, sequence_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::PredictionReconciliationInputMessage, netid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::PredictionReconciliationInputMessage, inputs_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::ServerTimeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::ServerTimeRequest, clientid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::ServerTimeRequest, clienttime_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtobufMessage::ServerTimeRequest, servertime_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ProtobufMessage::UDPMessage)},
  { 15, -1, sizeof(::ProtobufMessage::LockStepMessage_Input)},
  { 25, -1, sizeof(::ProtobufMessage::LockStepMessage)},
  { 31, -1, sizeof(::ProtobufMessage::SnapShotMessage_Objectstate)},
  { 40, -1, sizeof(::ProtobufMessage::SnapShotMessage)},
  { 51, -1, sizeof(::ProtobufMessage::SnapShotInputMessage)},
  { 62, -1, sizeof(::ProtobufMessage::UDPMessageSnapshot)},
  { 71, -1, sizeof(::ProtobufMessage::StateMessage_Input)},
  { 81, -1, sizeof(::ProtobufMessage::StateMessage_Objectstate)},
  { 95, -1, sizeof(::ProtobufMessage::StateMessage)},
  { 106, -1, sizeof(::ProtobufMessage::UDPStringMessage)},
  { 112, -1, sizeof(::ProtobufMessage::StateACKPacket)},
  { 120, -1, sizeof(::ProtobufMessage::TCPMessage)},
  { 126, -1, sizeof(::ProtobufMessage::PredictionReconciliationMessage_Input)},
  { 136, -1, sizeof(::ProtobufMessage::PredictionReconciliationMessage_Objectstate)},
  { 147, -1, sizeof(::ProtobufMessage::PredictionReconciliationMessage)},
  { 157, -1, sizeof(::ProtobufMessage::PredictionReconciliationInputMessage_Input)},
  { 167, -1, sizeof(::ProtobufMessage::PredictionReconciliationInputMessage)},
  { 175, -1, sizeof(::ProtobufMessage::ServerTimeRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtobufMessage::_UDPMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtobufMessage::_LockStepMessage_Input_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtobufMessage::_LockStepMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtobufMessage::_SnapShotMessage_Objectstate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtobufMessage::_SnapShotMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtobufMessage::_SnapShotInputMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtobufMessage::_UDPMessageSnapshot_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtobufMessage::_StateMessage_Input_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtobufMessage::_StateMessage_Objectstate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtobufMessage::_StateMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtobufMessage::_UDPStringMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtobufMessage::_StateACKPacket_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtobufMessage::_TCPMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtobufMessage::_PredictionReconciliationMessage_Input_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtobufMessage::_PredictionReconciliationMessage_Objectstate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtobufMessage::_PredictionReconciliationMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtobufMessage::_PredictionReconciliationInputMessage_Input_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtobufMessage::_PredictionReconciliationInputMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtobufMessage::_ServerTimeRequest_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "ProtoMessage.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 19);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022ProtoMessage.proto\022\017ProtobufMessage\"\353\004"
      "\n\nUDPMessage\0227\n\013lockstepmsg\030\001 \001(\0132 .Prot"
      "obufMessage.LockStepMessageH\000\0227\n\013snapsho"
      "tmsg\030\002 \001(\0132 .ProtobufMessage.SnapShotMes"
      "sageH\000\0221\n\010statemsg\030\003 \001(\0132\035.ProtobufMessa"
      "ge.StateMessageH\000\0229\n\014udpstringmsg\030\004 \001(\0132"
      "!.ProtobufMessage.UDPStringMessageH\000\022A\n\020"
      "snapshotinputmsg\030\005 \001(\0132%.ProtobufMessage"
      ".SnapShotInputMessageH\000\0223\n\010stateack\030\006 \001("
      "\0132\037.ProtobufMessage.StateACKPacketH\000\022W\n\033"
      "predictionreconciliationmsg\030\007 \001(\01320.Prot"
      "obufMessage.PredictionReconciliationMess"
      "ageH\000\022a\n predictionreconciliationinputms"
      "g\030\010 \001(\01325.ProtobufMessage.PredictionReco"
      "nciliationInputMessageH\000\022B\n\024servertimere"
      "questmsg\030\t \001(\0132\".ProtobufMessage.ServerT"
      "imeRequestH\000B\005\n\003msg\"\230\001\n\017LockStepMessage\022"
      "6\n\006inputs\030\001 \003(\0132&.ProtobufMessage.LockSt"
      "epMessage.Input\032M\n\005Input\022\014\n\004left\030\001 \001(\010\022\r"
      "\n\005right\030\002 \001(\010\022\n\n\002up\030\003 \001(\010\022\014\n\004down\030\004 \001(\010\022"
      "\r\n\005space\030\005 \001(\010\"\216\002\n\017SnapShotMessage\022\r\n\005ne"
      "tID\030\001 \001(\005\022\020\n\010sequence\030\002 \001(\005\022\030\n\020deltapack"
      "etindex\030\003 \001(\005\022\017\n\007initial\030\004 \001(\010\022\020\n\010inputa"
      "ck\030\005 \001(\005\022D\n\016objectsnapshot\030\006 \003(\0132,.Proto"
      "bufMessage.SnapShotMessage.Objectstate\032W"
      "\n\013Objectstate\022\023\n\013interacting\030\001 \001(\010\022\021\n\tpo"
      "sitionX\030\002 \001(\002\022\021\n\tpositionY\030\003 \001(\002\022\r\n\005angl"
      "e\030\004 \001(\002\"n\n\024SnapShotInputMessage\022\020\n\010seque"
      "nce\030\001 \001(\005\022\014\n\004left\030\002 \001(\010\022\r\n\005right\030\003 \001(\010\022\n"
      "\n\002up\030\004 \001(\010\022\014\n\004down\030\005 \001(\010\022\r\n\005space\030\006 \001(\010\""
      "X\n\022UDPMessageSnapshot\022\r\n\005netid\030\001 \001(\005\022\021\n\t"
      "positionX\030\002 \001(\002\022\021\n\tpositionY\030\003 \001(\002\022\r\n\005an"
      "gle\030\004 \001(\002\"\356\003\n\014StateMessage\022\r\n\005netID\030\001 \001("
      "\005\022\020\n\010sequence\030\002 \001(\005\022\027\n\017baseACKSequence\030\003"
      " \001(\005\0223\n\006inputs\030\004 \003(\0132#.ProtobufMessage.S"
      "tateMessage.Input\022>\n\013objectstate\030\005 \003(\0132)"
      ".ProtobufMessage.StateMessage.Objectstat"
      "e\022\021\n\ttimestamp\030\006 \001(\002\032M\n\005Input\022\014\n\004left\030\001 "
      "\001(\010\022\r\n\005right\030\002 \001(\010\022\n\n\002up\030\003 \001(\010\022\014\n\004down\030\004"
      " \001(\010\022\r\n\005space\030\005 \001(\010\032\314\001\n\013Objectstate\022\r\n\005i"
      "ndex\030\001 \001(\005\022\025\n\rabsoluteValue\030\002 \001(\010\022\024\n\014bas"
      "eSequence\030\003 \001(\005\022\021\n\tpositionX\030\004 \001(\002\022\021\n\tpo"
      "sitionY\030\005 \001(\002\022\r\n\005angle\030\006 \001(\002\022\030\n\020linear_v"
      "elocityX\030\007 \001(\002\022\030\n\020linear_velocityY\030\010 \001(\002"
      "\022\030\n\020angular_velocity\030\t \001(\002\"\037\n\020UDPStringM"
      "essage\022\013\n\003msg\030\001 \001(\t\"E\n\016StateACKPacket\022\r\n"
      "\005netID\030\001 \001(\005\022\023\n\013ackSequence\030\002 \001(\005\022\017\n\007ack"
      "Bits\030\003 \001(\005\"\031\n\nTCPMessage\022\013\n\003msg\030\001 \001(\t\"\322\003"
      "\n\037PredictionReconciliationMessage\022\r\n\005net"
      "ID\030\001 \001(\005\022\020\n\010sequence\030\002 \001(\005\022F\n\006inputs\030\004 \003"
      "(\01326.ProtobufMessage.PredictionReconcili"
      "ationMessage.Input\022Q\n\013objectstate\030\005 \003(\0132"
      "<.ProtobufMessage.PredictionReconciliati"
      "onMessage.Objectstate\022\021\n\ttimestamp\030\006 \001(\002"
      "\032M\n\005Input\022\014\n\004left\030\001 \001(\010\022\r\n\005right\030\002 \001(\010\022\n"
      "\n\002up\030\003 \001(\010\022\014\n\004down\030\004 \001(\010\022\r\n\005space\030\005 \001(\010\032"
      "\220\001\n\013Objectstate\022\021\n\tpositionX\030\001 \001(\002\022\021\n\tpo"
      "sitionY\030\002 \001(\002\022\r\n\005angle\030\003 \001(\002\022\030\n\020linear_v"
      "elocityX\030\004 \001(\002\022\030\n\020linear_velocityY\030\005 \001(\002"
      "\022\030\n\020angular_velocity\030\006 \001(\002\"\343\001\n$Predictio"
      "nReconciliationInputMessage\022\020\n\010sequence\030"
      "\001 \001(\005\022\r\n\005netid\030\002 \001(\005\022K\n\006inputs\030\003 \003(\0132;.P"
      "rotobufMessage.PredictionReconciliationI"
      "nputMessage.Input\032M\n\005Input\022\014\n\004left\030\001 \001(\010"
      "\022\r\n\005right\030\002 \001(\010\022\n\n\002up\030\003 \001(\010\022\014\n\004down\030\004 \001("
      "\010\022\r\n\005space\030\005 \001(\010\"M\n\021ServerTimeRequest\022\020\n"
      "\010clientID\030\001 \001(\005\022\022\n\nclienttime\030\002 \001(\005\022\022\n\ns"
      "ervertime\030\003 \001(\005B\"\252\002\037Google.Protobuf.Prot"
      "obufMessageb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2739);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoMessage.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ProtoMessage_2eproto
namespace ProtobufMessage {

// ===================================================================

void UDPMessage::InitAsDefaultInstance() {
  ::ProtobufMessage::_UDPMessage_default_instance_.lockstepmsg_ = const_cast< ::ProtobufMessage::LockStepMessage*>(
      ::ProtobufMessage::LockStepMessage::internal_default_instance());
  ::ProtobufMessage::_UDPMessage_default_instance_.snapshotmsg_ = const_cast< ::ProtobufMessage::SnapShotMessage*>(
      ::ProtobufMessage::SnapShotMessage::internal_default_instance());
  ::ProtobufMessage::_UDPMessage_default_instance_.statemsg_ = const_cast< ::ProtobufMessage::StateMessage*>(
      ::ProtobufMessage::StateMessage::internal_default_instance());
  ::ProtobufMessage::_UDPMessage_default_instance_.udpstringmsg_ = const_cast< ::ProtobufMessage::UDPStringMessage*>(
      ::ProtobufMessage::UDPStringMessage::internal_default_instance());
  ::ProtobufMessage::_UDPMessage_default_instance_.snapshotinputmsg_ = const_cast< ::ProtobufMessage::SnapShotInputMessage*>(
      ::ProtobufMessage::SnapShotInputMessage::internal_default_instance());
  ::ProtobufMessage::_UDPMessage_default_instance_.stateack_ = const_cast< ::ProtobufMessage::StateACKPacket*>(
      ::ProtobufMessage::StateACKPacket::internal_default_instance());
  ::ProtobufMessage::_UDPMessage_default_instance_.predictionreconciliationmsg_ = const_cast< ::ProtobufMessage::PredictionReconciliationMessage*>(
      ::ProtobufMessage::PredictionReconciliationMessage::internal_default_instance());
  ::ProtobufMessage::_UDPMessage_default_instance_.predictionreconciliationinputmsg_ = const_cast< ::ProtobufMessage::PredictionReconciliationInputMessage*>(
      ::ProtobufMessage::PredictionReconciliationInputMessage::internal_default_instance());
  ::ProtobufMessage::_UDPMessage_default_instance_.servertimerequestmsg_ = const_cast< ::ProtobufMessage::ServerTimeRequest*>(
      ::ProtobufMessage::ServerTimeRequest::internal_default_instance());
}
void UDPMessage::set_allocated_lockstepmsg(::ProtobufMessage::LockStepMessage* lockstepmsg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (lockstepmsg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      lockstepmsg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, lockstepmsg, submessage_arena);
    }
    set_has_lockstepmsg();
    msg_.lockstepmsg_ = lockstepmsg;
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufMessage.UDPMessage.lockstepmsg)
}
void UDPMessage::set_allocated_snapshotmsg(::ProtobufMessage::SnapShotMessage* snapshotmsg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (snapshotmsg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      snapshotmsg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, snapshotmsg, submessage_arena);
    }
    set_has_snapshotmsg();
    msg_.snapshotmsg_ = snapshotmsg;
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufMessage.UDPMessage.snapshotmsg)
}
void UDPMessage::set_allocated_statemsg(::ProtobufMessage::StateMessage* statemsg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (statemsg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      statemsg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, statemsg, submessage_arena);
    }
    set_has_statemsg();
    msg_.statemsg_ = statemsg;
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufMessage.UDPMessage.statemsg)
}
void UDPMessage::set_allocated_udpstringmsg(::ProtobufMessage::UDPStringMessage* udpstringmsg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (udpstringmsg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      udpstringmsg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, udpstringmsg, submessage_arena);
    }
    set_has_udpstringmsg();
    msg_.udpstringmsg_ = udpstringmsg;
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufMessage.UDPMessage.udpstringmsg)
}
void UDPMessage::set_allocated_snapshotinputmsg(::ProtobufMessage::SnapShotInputMessage* snapshotinputmsg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (snapshotinputmsg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      snapshotinputmsg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, snapshotinputmsg, submessage_arena);
    }
    set_has_snapshotinputmsg();
    msg_.snapshotinputmsg_ = snapshotinputmsg;
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufMessage.UDPMessage.snapshotinputmsg)
}
void UDPMessage::set_allocated_stateack(::ProtobufMessage::StateACKPacket* stateack) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (stateack) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      stateack = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, stateack, submessage_arena);
    }
    set_has_stateack();
    msg_.stateack_ = stateack;
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufMessage.UDPMessage.stateack)
}
void UDPMessage::set_allocated_predictionreconciliationmsg(::ProtobufMessage::PredictionReconciliationMessage* predictionreconciliationmsg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (predictionreconciliationmsg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      predictionreconciliationmsg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, predictionreconciliationmsg, submessage_arena);
    }
    set_has_predictionreconciliationmsg();
    msg_.predictionreconciliationmsg_ = predictionreconciliationmsg;
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufMessage.UDPMessage.predictionreconciliationmsg)
}
void UDPMessage::set_allocated_predictionreconciliationinputmsg(::ProtobufMessage::PredictionReconciliationInputMessage* predictionreconciliationinputmsg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (predictionreconciliationinputmsg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      predictionreconciliationinputmsg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, predictionreconciliationinputmsg, submessage_arena);
    }
    set_has_predictionreconciliationinputmsg();
    msg_.predictionreconciliationinputmsg_ = predictionreconciliationinputmsg;
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufMessage.UDPMessage.predictionreconciliationinputmsg)
}
void UDPMessage::set_allocated_servertimerequestmsg(::ProtobufMessage::ServerTimeRequest* servertimerequestmsg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_msg();
  if (servertimerequestmsg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      servertimerequestmsg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, servertimerequestmsg, submessage_arena);
    }
    set_has_servertimerequestmsg();
    msg_.servertimerequestmsg_ = servertimerequestmsg;
  }
  // @@protoc_insertion_point(field_set_allocated:ProtobufMessage.UDPMessage.servertimerequestmsg)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UDPMessage::kLockstepmsgFieldNumber;
const int UDPMessage::kSnapshotmsgFieldNumber;
const int UDPMessage::kStatemsgFieldNumber;
const int UDPMessage::kUdpstringmsgFieldNumber;
const int UDPMessage::kSnapshotinputmsgFieldNumber;
const int UDPMessage::kStateackFieldNumber;
const int UDPMessage::kPredictionreconciliationmsgFieldNumber;
const int UDPMessage::kPredictionreconciliationinputmsgFieldNumber;
const int UDPMessage::kServertimerequestmsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UDPMessage::UDPMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtoMessage_2eproto::InitDefaultsUDPMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMessage.UDPMessage)
}
UDPMessage::UDPMessage(const UDPMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_msg();
  switch (from.msg_case()) {
    case kLockstepmsg: {
      mutable_lockstepmsg()->::ProtobufMessage::LockStepMessage::MergeFrom(from.lockstepmsg());
      break;
    }
    case kSnapshotmsg: {
      mutable_snapshotmsg()->::ProtobufMessage::SnapShotMessage::MergeFrom(from.snapshotmsg());
      break;
    }
    case kStatemsg: {
      mutable_statemsg()->::ProtobufMessage::StateMessage::MergeFrom(from.statemsg());
      break;
    }
    case kUdpstringmsg: {
      mutable_udpstringmsg()->::ProtobufMessage::UDPStringMessage::MergeFrom(from.udpstringmsg());
      break;
    }
    case kSnapshotinputmsg: {
      mutable_snapshotinputmsg()->::ProtobufMessage::SnapShotInputMessage::MergeFrom(from.snapshotinputmsg());
      break;
    }
    case kStateack: {
      mutable_stateack()->::ProtobufMessage::StateACKPacket::MergeFrom(from.stateack());
      break;
    }
    case kPredictionreconciliationmsg: {
      mutable_predictionreconciliationmsg()->::ProtobufMessage::PredictionReconciliationMessage::MergeFrom(from.predictionreconciliationmsg());
      break;
    }
    case kPredictionreconciliationinputmsg: {
      mutable_predictionreconciliationinputmsg()->::ProtobufMessage::PredictionReconciliationInputMessage::MergeFrom(from.predictionreconciliationinputmsg());
      break;
    }
    case kServertimerequestmsg: {
      mutable_servertimerequestmsg()->::ProtobufMessage::ServerTimeRequest::MergeFrom(from.servertimerequestmsg());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ProtobufMessage.UDPMessage)
}

void UDPMessage::SharedCtor() {
  clear_has_msg();
  _cached_size_ = 0;
}

UDPMessage::~UDPMessage() {
  // @@protoc_insertion_point(destructor:ProtobufMessage.UDPMessage)
  SharedDtor();
}

void UDPMessage::SharedDtor() {
  if (has_msg()) {
    clear_msg();
  }
}

void UDPMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UDPMessage::descriptor() {
  ::protobuf_ProtoMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UDPMessage& UDPMessage::default_instance() {
  ::protobuf_ProtoMessage_2eproto::InitDefaultsUDPMessage();
  return *internal_default_instance();
}


void UDPMessage::clear_msg() {
// @@protoc_insertion_point(one_of_clear_start:ProtobufMessage.UDPMessage)
  switch (msg_case()) {
    case kLockstepmsg: {
      delete msg_.lockstepmsg_;
      break;
    }
    case kSnapshotmsg: {
      delete msg_.snapshotmsg_;
      break;
    }
    case kStatemsg: {
      delete msg_.statemsg_;
      break;
    }
    case kUdpstringmsg: {
      delete msg_.udpstringmsg_;
      break;
    }
    case kSnapshotinputmsg: {
      delete msg_.snapshotinputmsg_;
      break;
    }
    case kStateack: {
      delete msg_.stateack_;
      break;
    }
    case kPredictionreconciliationmsg: {
      delete msg_.predictionreconciliationmsg_;
      break;
    }
    case kPredictionreconciliationinputmsg: {
      delete msg_.predictionreconciliationinputmsg_;
      break;
    }
    case kServertimerequestmsg: {
      delete msg_.servertimerequestmsg_;
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MSG_NOT_SET;
}


void UDPMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMessage.UDPMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_msg();
  _internal_metadata_.Clear();
}

bool UDPMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMessage.UDPMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ProtobufMessage.LockStepMessage lockstepmsg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lockstepmsg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtobufMessage.SnapShotMessage snapshotmsg = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_snapshotmsg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtobufMessage.StateMessage statemsg = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_statemsg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtobufMessage.UDPStringMessage udpstringmsg = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_udpstringmsg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtobufMessage.SnapShotInputMessage snapshotinputmsg = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_snapshotinputmsg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtobufMessage.StateACKPacket stateack = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stateack()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtobufMessage.PredictionReconciliationMessage predictionreconciliationmsg = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_predictionreconciliationmsg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtobufMessage.PredictionReconciliationInputMessage predictionreconciliationinputmsg = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_predictionreconciliationinputmsg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ProtobufMessage.ServerTimeRequest servertimerequestmsg = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_servertimerequestmsg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMessage.UDPMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMessage.UDPMessage)
  return false;
#undef DO_
}

void UDPMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMessage.UDPMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ProtobufMessage.LockStepMessage lockstepmsg = 1;
  if (has_lockstepmsg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *msg_.lockstepmsg_, output);
  }

  // .ProtobufMessage.SnapShotMessage snapshotmsg = 2;
  if (has_snapshotmsg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *msg_.snapshotmsg_, output);
  }

  // .ProtobufMessage.StateMessage statemsg = 3;
  if (has_statemsg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *msg_.statemsg_, output);
  }

  // .ProtobufMessage.UDPStringMessage udpstringmsg = 4;
  if (has_udpstringmsg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *msg_.udpstringmsg_, output);
  }

  // .ProtobufMessage.SnapShotInputMessage snapshotinputmsg = 5;
  if (has_snapshotinputmsg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *msg_.snapshotinputmsg_, output);
  }

  // .ProtobufMessage.StateACKPacket stateack = 6;
  if (has_stateack()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *msg_.stateack_, output);
  }

  // .ProtobufMessage.PredictionReconciliationMessage predictionreconciliationmsg = 7;
  if (has_predictionreconciliationmsg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *msg_.predictionreconciliationmsg_, output);
  }

  // .ProtobufMessage.PredictionReconciliationInputMessage predictionreconciliationinputmsg = 8;
  if (has_predictionreconciliationinputmsg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *msg_.predictionreconciliationinputmsg_, output);
  }

  // .ProtobufMessage.ServerTimeRequest servertimerequestmsg = 9;
  if (has_servertimerequestmsg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *msg_.servertimerequestmsg_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtobufMessage.UDPMessage)
}

::google::protobuf::uint8* UDPMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMessage.UDPMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ProtobufMessage.LockStepMessage lockstepmsg = 1;
  if (has_lockstepmsg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, *msg_.lockstepmsg_, deterministic, target);
  }

  // .ProtobufMessage.SnapShotMessage snapshotmsg = 2;
  if (has_snapshotmsg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *msg_.snapshotmsg_, deterministic, target);
  }

  // .ProtobufMessage.StateMessage statemsg = 3;
  if (has_statemsg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *msg_.statemsg_, deterministic, target);
  }

  // .ProtobufMessage.UDPStringMessage udpstringmsg = 4;
  if (has_udpstringmsg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *msg_.udpstringmsg_, deterministic, target);
  }

  // .ProtobufMessage.SnapShotInputMessage snapshotinputmsg = 5;
  if (has_snapshotinputmsg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *msg_.snapshotinputmsg_, deterministic, target);
  }

  // .ProtobufMessage.StateACKPacket stateack = 6;
  if (has_stateack()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *msg_.stateack_, deterministic, target);
  }

  // .ProtobufMessage.PredictionReconciliationMessage predictionreconciliationmsg = 7;
  if (has_predictionreconciliationmsg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *msg_.predictionreconciliationmsg_, deterministic, target);
  }

  // .ProtobufMessage.PredictionReconciliationInputMessage predictionreconciliationinputmsg = 8;
  if (has_predictionreconciliationinputmsg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *msg_.predictionreconciliationinputmsg_, deterministic, target);
  }

  // .ProtobufMessage.ServerTimeRequest servertimerequestmsg = 9;
  if (has_servertimerequestmsg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, *msg_.servertimerequestmsg_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMessage.UDPMessage)
  return target;
}

size_t UDPMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMessage.UDPMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (msg_case()) {
    // .ProtobufMessage.LockStepMessage lockstepmsg = 1;
    case kLockstepmsg: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.lockstepmsg_);
      break;
    }
    // .ProtobufMessage.SnapShotMessage snapshotmsg = 2;
    case kSnapshotmsg: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.snapshotmsg_);
      break;
    }
    // .ProtobufMessage.StateMessage statemsg = 3;
    case kStatemsg: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.statemsg_);
      break;
    }
    // .ProtobufMessage.UDPStringMessage udpstringmsg = 4;
    case kUdpstringmsg: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.udpstringmsg_);
      break;
    }
    // .ProtobufMessage.SnapShotInputMessage snapshotinputmsg = 5;
    case kSnapshotinputmsg: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.snapshotinputmsg_);
      break;
    }
    // .ProtobufMessage.StateACKPacket stateack = 6;
    case kStateack: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.stateack_);
      break;
    }
    // .ProtobufMessage.PredictionReconciliationMessage predictionreconciliationmsg = 7;
    case kPredictionreconciliationmsg: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.predictionreconciliationmsg_);
      break;
    }
    // .ProtobufMessage.PredictionReconciliationInputMessage predictionreconciliationinputmsg = 8;
    case kPredictionreconciliationinputmsg: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.predictionreconciliationinputmsg_);
      break;
    }
    // .ProtobufMessage.ServerTimeRequest servertimerequestmsg = 9;
    case kServertimerequestmsg: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *msg_.servertimerequestmsg_);
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UDPMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMessage.UDPMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const UDPMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UDPMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMessage.UDPMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMessage.UDPMessage)
    MergeFrom(*source);
  }
}

void UDPMessage::MergeFrom(const UDPMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMessage.UDPMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.msg_case()) {
    case kLockstepmsg: {
      mutable_lockstepmsg()->::ProtobufMessage::LockStepMessage::MergeFrom(from.lockstepmsg());
      break;
    }
    case kSnapshotmsg: {
      mutable_snapshotmsg()->::ProtobufMessage::SnapShotMessage::MergeFrom(from.snapshotmsg());
      break;
    }
    case kStatemsg: {
      mutable_statemsg()->::ProtobufMessage::StateMessage::MergeFrom(from.statemsg());
      break;
    }
    case kUdpstringmsg: {
      mutable_udpstringmsg()->::ProtobufMessage::UDPStringMessage::MergeFrom(from.udpstringmsg());
      break;
    }
    case kSnapshotinputmsg: {
      mutable_snapshotinputmsg()->::ProtobufMessage::SnapShotInputMessage::MergeFrom(from.snapshotinputmsg());
      break;
    }
    case kStateack: {
      mutable_stateack()->::ProtobufMessage::StateACKPacket::MergeFrom(from.stateack());
      break;
    }
    case kPredictionreconciliationmsg: {
      mutable_predictionreconciliationmsg()->::ProtobufMessage::PredictionReconciliationMessage::MergeFrom(from.predictionreconciliationmsg());
      break;
    }
    case kPredictionreconciliationinputmsg: {
      mutable_predictionreconciliationinputmsg()->::ProtobufMessage::PredictionReconciliationInputMessage::MergeFrom(from.predictionreconciliationinputmsg());
      break;
    }
    case kServertimerequestmsg: {
      mutable_servertimerequestmsg()->::ProtobufMessage::ServerTimeRequest::MergeFrom(from.servertimerequestmsg());
      break;
    }
    case MSG_NOT_SET: {
      break;
    }
  }
}

void UDPMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMessage.UDPMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UDPMessage::CopyFrom(const UDPMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMessage.UDPMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UDPMessage::IsInitialized() const {
  return true;
}

void UDPMessage::Swap(UDPMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UDPMessage::InternalSwap(UDPMessage* other) {
  using std::swap;
  swap(msg_, other->msg_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UDPMessage::GetMetadata() const {
  protobuf_ProtoMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LockStepMessage_Input::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LockStepMessage_Input::kLeftFieldNumber;
const int LockStepMessage_Input::kRightFieldNumber;
const int LockStepMessage_Input::kUpFieldNumber;
const int LockStepMessage_Input::kDownFieldNumber;
const int LockStepMessage_Input::kSpaceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LockStepMessage_Input::LockStepMessage_Input()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtoMessage_2eproto::InitDefaultsLockStepMessage_Input();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMessage.LockStepMessage.Input)
}
LockStepMessage_Input::LockStepMessage_Input(const LockStepMessage_Input& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&left_, &from.left_,
    static_cast<size_t>(reinterpret_cast<char*>(&space_) -
    reinterpret_cast<char*>(&left_)) + sizeof(space_));
  // @@protoc_insertion_point(copy_constructor:ProtobufMessage.LockStepMessage.Input)
}

void LockStepMessage_Input::SharedCtor() {
  ::memset(&left_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&space_) -
      reinterpret_cast<char*>(&left_)) + sizeof(space_));
  _cached_size_ = 0;
}

LockStepMessage_Input::~LockStepMessage_Input() {
  // @@protoc_insertion_point(destructor:ProtobufMessage.LockStepMessage.Input)
  SharedDtor();
}

void LockStepMessage_Input::SharedDtor() {
}

void LockStepMessage_Input::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LockStepMessage_Input::descriptor() {
  ::protobuf_ProtoMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LockStepMessage_Input& LockStepMessage_Input::default_instance() {
  ::protobuf_ProtoMessage_2eproto::InitDefaultsLockStepMessage_Input();
  return *internal_default_instance();
}


void LockStepMessage_Input::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMessage.LockStepMessage.Input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&left_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&space_) -
      reinterpret_cast<char*>(&left_)) + sizeof(space_));
  _internal_metadata_.Clear();
}

bool LockStepMessage_Input::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMessage.LockStepMessage.Input)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool left = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &left_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool right = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &right_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool up = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &up_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool down = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &down_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool space = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &space_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMessage.LockStepMessage.Input)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMessage.LockStepMessage.Input)
  return false;
#undef DO_
}

void LockStepMessage_Input::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMessage.LockStepMessage.Input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool left = 1;
  if (this->left() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->left(), output);
  }

  // bool right = 2;
  if (this->right() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->right(), output);
  }

  // bool up = 3;
  if (this->up() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->up(), output);
  }

  // bool down = 4;
  if (this->down() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->down(), output);
  }

  // bool space = 5;
  if (this->space() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->space(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtobufMessage.LockStepMessage.Input)
}

::google::protobuf::uint8* LockStepMessage_Input::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMessage.LockStepMessage.Input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool left = 1;
  if (this->left() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->left(), target);
  }

  // bool right = 2;
  if (this->right() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->right(), target);
  }

  // bool up = 3;
  if (this->up() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->up(), target);
  }

  // bool down = 4;
  if (this->down() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->down(), target);
  }

  // bool space = 5;
  if (this->space() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->space(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMessage.LockStepMessage.Input)
  return target;
}

size_t LockStepMessage_Input::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMessage.LockStepMessage.Input)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool left = 1;
  if (this->left() != 0) {
    total_size += 1 + 1;
  }

  // bool right = 2;
  if (this->right() != 0) {
    total_size += 1 + 1;
  }

  // bool up = 3;
  if (this->up() != 0) {
    total_size += 1 + 1;
  }

  // bool down = 4;
  if (this->down() != 0) {
    total_size += 1 + 1;
  }

  // bool space = 5;
  if (this->space() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LockStepMessage_Input::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMessage.LockStepMessage.Input)
  GOOGLE_DCHECK_NE(&from, this);
  const LockStepMessage_Input* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LockStepMessage_Input>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMessage.LockStepMessage.Input)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMessage.LockStepMessage.Input)
    MergeFrom(*source);
  }
}

void LockStepMessage_Input::MergeFrom(const LockStepMessage_Input& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMessage.LockStepMessage.Input)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.left() != 0) {
    set_left(from.left());
  }
  if (from.right() != 0) {
    set_right(from.right());
  }
  if (from.up() != 0) {
    set_up(from.up());
  }
  if (from.down() != 0) {
    set_down(from.down());
  }
  if (from.space() != 0) {
    set_space(from.space());
  }
}

void LockStepMessage_Input::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMessage.LockStepMessage.Input)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LockStepMessage_Input::CopyFrom(const LockStepMessage_Input& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMessage.LockStepMessage.Input)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LockStepMessage_Input::IsInitialized() const {
  return true;
}

void LockStepMessage_Input::Swap(LockStepMessage_Input* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LockStepMessage_Input::InternalSwap(LockStepMessage_Input* other) {
  using std::swap;
  swap(left_, other->left_);
  swap(right_, other->right_);
  swap(up_, other->up_);
  swap(down_, other->down_);
  swap(space_, other->space_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LockStepMessage_Input::GetMetadata() const {
  protobuf_ProtoMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void LockStepMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LockStepMessage::kInputsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LockStepMessage::LockStepMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtoMessage_2eproto::InitDefaultsLockStepMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMessage.LockStepMessage)
}
LockStepMessage::LockStepMessage(const LockStepMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      inputs_(from.inputs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ProtobufMessage.LockStepMessage)
}

void LockStepMessage::SharedCtor() {
  _cached_size_ = 0;
}

LockStepMessage::~LockStepMessage() {
  // @@protoc_insertion_point(destructor:ProtobufMessage.LockStepMessage)
  SharedDtor();
}

void LockStepMessage::SharedDtor() {
}

void LockStepMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LockStepMessage::descriptor() {
  ::protobuf_ProtoMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LockStepMessage& LockStepMessage::default_instance() {
  ::protobuf_ProtoMessage_2eproto::InitDefaultsLockStepMessage();
  return *internal_default_instance();
}


void LockStepMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMessage.LockStepMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  inputs_.Clear();
  _internal_metadata_.Clear();
}

bool LockStepMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMessage.LockStepMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtobufMessage.LockStepMessage.Input inputs = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_inputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMessage.LockStepMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMessage.LockStepMessage)
  return false;
#undef DO_
}

void LockStepMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMessage.LockStepMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ProtobufMessage.LockStepMessage.Input inputs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inputs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->inputs(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtobufMessage.LockStepMessage)
}

::google::protobuf::uint8* LockStepMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMessage.LockStepMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ProtobufMessage.LockStepMessage.Input inputs = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inputs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->inputs(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMessage.LockStepMessage)
  return target;
}

size_t LockStepMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMessage.LockStepMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ProtobufMessage.LockStepMessage.Input inputs = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->inputs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->inputs(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LockStepMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMessage.LockStepMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const LockStepMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LockStepMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMessage.LockStepMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMessage.LockStepMessage)
    MergeFrom(*source);
  }
}

void LockStepMessage::MergeFrom(const LockStepMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMessage.LockStepMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  inputs_.MergeFrom(from.inputs_);
}

void LockStepMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMessage.LockStepMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LockStepMessage::CopyFrom(const LockStepMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMessage.LockStepMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LockStepMessage::IsInitialized() const {
  return true;
}

void LockStepMessage::Swap(LockStepMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LockStepMessage::InternalSwap(LockStepMessage* other) {
  using std::swap;
  CastToBase(&inputs_)->InternalSwap(CastToBase(&other->inputs_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LockStepMessage::GetMetadata() const {
  protobuf_ProtoMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SnapShotMessage_Objectstate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SnapShotMessage_Objectstate::kInteractingFieldNumber;
const int SnapShotMessage_Objectstate::kPositionXFieldNumber;
const int SnapShotMessage_Objectstate::kPositionYFieldNumber;
const int SnapShotMessage_Objectstate::kAngleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SnapShotMessage_Objectstate::SnapShotMessage_Objectstate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtoMessage_2eproto::InitDefaultsSnapShotMessage_Objectstate();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMessage.SnapShotMessage.Objectstate)
}
SnapShotMessage_Objectstate::SnapShotMessage_Objectstate(const SnapShotMessage_Objectstate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&interacting_, &from.interacting_,
    static_cast<size_t>(reinterpret_cast<char*>(&angle_) -
    reinterpret_cast<char*>(&interacting_)) + sizeof(angle_));
  // @@protoc_insertion_point(copy_constructor:ProtobufMessage.SnapShotMessage.Objectstate)
}

void SnapShotMessage_Objectstate::SharedCtor() {
  ::memset(&interacting_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&angle_) -
      reinterpret_cast<char*>(&interacting_)) + sizeof(angle_));
  _cached_size_ = 0;
}

SnapShotMessage_Objectstate::~SnapShotMessage_Objectstate() {
  // @@protoc_insertion_point(destructor:ProtobufMessage.SnapShotMessage.Objectstate)
  SharedDtor();
}

void SnapShotMessage_Objectstate::SharedDtor() {
}

void SnapShotMessage_Objectstate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SnapShotMessage_Objectstate::descriptor() {
  ::protobuf_ProtoMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SnapShotMessage_Objectstate& SnapShotMessage_Objectstate::default_instance() {
  ::protobuf_ProtoMessage_2eproto::InitDefaultsSnapShotMessage_Objectstate();
  return *internal_default_instance();
}


void SnapShotMessage_Objectstate::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMessage.SnapShotMessage.Objectstate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&interacting_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&angle_) -
      reinterpret_cast<char*>(&interacting_)) + sizeof(angle_));
  _internal_metadata_.Clear();
}

bool SnapShotMessage_Objectstate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMessage.SnapShotMessage.Objectstate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool interacting = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &interacting_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float positionX = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &positionx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float positionY = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &positiony_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float angle = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMessage.SnapShotMessage.Objectstate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMessage.SnapShotMessage.Objectstate)
  return false;
#undef DO_
}

void SnapShotMessage_Objectstate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMessage.SnapShotMessage.Objectstate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool interacting = 1;
  if (this->interacting() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->interacting(), output);
  }

  // float positionX = 2;
  if (this->positionx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->positionx(), output);
  }

  // float positionY = 3;
  if (this->positiony() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->positiony(), output);
  }

  // float angle = 4;
  if (this->angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->angle(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtobufMessage.SnapShotMessage.Objectstate)
}

::google::protobuf::uint8* SnapShotMessage_Objectstate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMessage.SnapShotMessage.Objectstate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool interacting = 1;
  if (this->interacting() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->interacting(), target);
  }

  // float positionX = 2;
  if (this->positionx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->positionx(), target);
  }

  // float positionY = 3;
  if (this->positiony() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->positiony(), target);
  }

  // float angle = 4;
  if (this->angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->angle(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMessage.SnapShotMessage.Objectstate)
  return target;
}

size_t SnapShotMessage_Objectstate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMessage.SnapShotMessage.Objectstate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool interacting = 1;
  if (this->interacting() != 0) {
    total_size += 1 + 1;
  }

  // float positionX = 2;
  if (this->positionx() != 0) {
    total_size += 1 + 4;
  }

  // float positionY = 3;
  if (this->positiony() != 0) {
    total_size += 1 + 4;
  }

  // float angle = 4;
  if (this->angle() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SnapShotMessage_Objectstate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMessage.SnapShotMessage.Objectstate)
  GOOGLE_DCHECK_NE(&from, this);
  const SnapShotMessage_Objectstate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SnapShotMessage_Objectstate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMessage.SnapShotMessage.Objectstate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMessage.SnapShotMessage.Objectstate)
    MergeFrom(*source);
  }
}

void SnapShotMessage_Objectstate::MergeFrom(const SnapShotMessage_Objectstate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMessage.SnapShotMessage.Objectstate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.interacting() != 0) {
    set_interacting(from.interacting());
  }
  if (from.positionx() != 0) {
    set_positionx(from.positionx());
  }
  if (from.positiony() != 0) {
    set_positiony(from.positiony());
  }
  if (from.angle() != 0) {
    set_angle(from.angle());
  }
}

void SnapShotMessage_Objectstate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMessage.SnapShotMessage.Objectstate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SnapShotMessage_Objectstate::CopyFrom(const SnapShotMessage_Objectstate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMessage.SnapShotMessage.Objectstate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SnapShotMessage_Objectstate::IsInitialized() const {
  return true;
}

void SnapShotMessage_Objectstate::Swap(SnapShotMessage_Objectstate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SnapShotMessage_Objectstate::InternalSwap(SnapShotMessage_Objectstate* other) {
  using std::swap;
  swap(interacting_, other->interacting_);
  swap(positionx_, other->positionx_);
  swap(positiony_, other->positiony_);
  swap(angle_, other->angle_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SnapShotMessage_Objectstate::GetMetadata() const {
  protobuf_ProtoMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SnapShotMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SnapShotMessage::kNetIDFieldNumber;
const int SnapShotMessage::kSequenceFieldNumber;
const int SnapShotMessage::kDeltapacketindexFieldNumber;
const int SnapShotMessage::kInitialFieldNumber;
const int SnapShotMessage::kInputackFieldNumber;
const int SnapShotMessage::kObjectsnapshotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SnapShotMessage::SnapShotMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtoMessage_2eproto::InitDefaultsSnapShotMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMessage.SnapShotMessage)
}
SnapShotMessage::SnapShotMessage(const SnapShotMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      objectsnapshot_(from.objectsnapshot_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&netid_, &from.netid_,
    static_cast<size_t>(reinterpret_cast<char*>(&inputack_) -
    reinterpret_cast<char*>(&netid_)) + sizeof(inputack_));
  // @@protoc_insertion_point(copy_constructor:ProtobufMessage.SnapShotMessage)
}

void SnapShotMessage::SharedCtor() {
  ::memset(&netid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&inputack_) -
      reinterpret_cast<char*>(&netid_)) + sizeof(inputack_));
  _cached_size_ = 0;
}

SnapShotMessage::~SnapShotMessage() {
  // @@protoc_insertion_point(destructor:ProtobufMessage.SnapShotMessage)
  SharedDtor();
}

void SnapShotMessage::SharedDtor() {
}

void SnapShotMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SnapShotMessage::descriptor() {
  ::protobuf_ProtoMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SnapShotMessage& SnapShotMessage::default_instance() {
  ::protobuf_ProtoMessage_2eproto::InitDefaultsSnapShotMessage();
  return *internal_default_instance();
}


void SnapShotMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMessage.SnapShotMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  objectsnapshot_.Clear();
  ::memset(&netid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&inputack_) -
      reinterpret_cast<char*>(&netid_)) + sizeof(inputack_));
  _internal_metadata_.Clear();
}

bool SnapShotMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMessage.SnapShotMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 netID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &netid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sequence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sequence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 deltapacketindex = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &deltapacketindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool initial = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &initial_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 inputack = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &inputack_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ProtobufMessage.SnapShotMessage.Objectstate objectsnapshot = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_objectsnapshot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMessage.SnapShotMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMessage.SnapShotMessage)
  return false;
#undef DO_
}

void SnapShotMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMessage.SnapShotMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 netID = 1;
  if (this->netid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->netid(), output);
  }

  // int32 sequence = 2;
  if (this->sequence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sequence(), output);
  }

  // int32 deltapacketindex = 3;
  if (this->deltapacketindex() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->deltapacketindex(), output);
  }

  // bool initial = 4;
  if (this->initial() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->initial(), output);
  }

  // int32 inputack = 5;
  if (this->inputack() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->inputack(), output);
  }

  // repeated .ProtobufMessage.SnapShotMessage.Objectstate objectsnapshot = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->objectsnapshot_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6,
      this->objectsnapshot(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtobufMessage.SnapShotMessage)
}

::google::protobuf::uint8* SnapShotMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMessage.SnapShotMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 netID = 1;
  if (this->netid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->netid(), target);
  }

  // int32 sequence = 2;
  if (this->sequence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sequence(), target);
  }

  // int32 deltapacketindex = 3;
  if (this->deltapacketindex() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->deltapacketindex(), target);
  }

  // bool initial = 4;
  if (this->initial() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->initial(), target);
  }

  // int32 inputack = 5;
  if (this->inputack() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->inputack(), target);
  }

  // repeated .ProtobufMessage.SnapShotMessage.Objectstate objectsnapshot = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->objectsnapshot_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->objectsnapshot(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMessage.SnapShotMessage)
  return target;
}

size_t SnapShotMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMessage.SnapShotMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ProtobufMessage.SnapShotMessage.Objectstate objectsnapshot = 6;
  {
    unsigned int count = static_cast<unsigned int>(this->objectsnapshot_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->objectsnapshot(static_cast<int>(i)));
    }
  }

  // int32 netID = 1;
  if (this->netid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->netid());
  }

  // int32 sequence = 2;
  if (this->sequence() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sequence());
  }

  // int32 deltapacketindex = 3;
  if (this->deltapacketindex() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->deltapacketindex());
  }

  // bool initial = 4;
  if (this->initial() != 0) {
    total_size += 1 + 1;
  }

  // int32 inputack = 5;
  if (this->inputack() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->inputack());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SnapShotMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMessage.SnapShotMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const SnapShotMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SnapShotMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMessage.SnapShotMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMessage.SnapShotMessage)
    MergeFrom(*source);
  }
}

void SnapShotMessage::MergeFrom(const SnapShotMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMessage.SnapShotMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  objectsnapshot_.MergeFrom(from.objectsnapshot_);
  if (from.netid() != 0) {
    set_netid(from.netid());
  }
  if (from.sequence() != 0) {
    set_sequence(from.sequence());
  }
  if (from.deltapacketindex() != 0) {
    set_deltapacketindex(from.deltapacketindex());
  }
  if (from.initial() != 0) {
    set_initial(from.initial());
  }
  if (from.inputack() != 0) {
    set_inputack(from.inputack());
  }
}

void SnapShotMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMessage.SnapShotMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SnapShotMessage::CopyFrom(const SnapShotMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMessage.SnapShotMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SnapShotMessage::IsInitialized() const {
  return true;
}

void SnapShotMessage::Swap(SnapShotMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SnapShotMessage::InternalSwap(SnapShotMessage* other) {
  using std::swap;
  CastToBase(&objectsnapshot_)->InternalSwap(CastToBase(&other->objectsnapshot_));
  swap(netid_, other->netid_);
  swap(sequence_, other->sequence_);
  swap(deltapacketindex_, other->deltapacketindex_);
  swap(initial_, other->initial_);
  swap(inputack_, other->inputack_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SnapShotMessage::GetMetadata() const {
  protobuf_ProtoMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void SnapShotInputMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SnapShotInputMessage::kSequenceFieldNumber;
const int SnapShotInputMessage::kLeftFieldNumber;
const int SnapShotInputMessage::kRightFieldNumber;
const int SnapShotInputMessage::kUpFieldNumber;
const int SnapShotInputMessage::kDownFieldNumber;
const int SnapShotInputMessage::kSpaceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SnapShotInputMessage::SnapShotInputMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtoMessage_2eproto::InitDefaultsSnapShotInputMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMessage.SnapShotInputMessage)
}
SnapShotInputMessage::SnapShotInputMessage(const SnapShotInputMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&sequence_, &from.sequence_,
    static_cast<size_t>(reinterpret_cast<char*>(&space_) -
    reinterpret_cast<char*>(&sequence_)) + sizeof(space_));
  // @@protoc_insertion_point(copy_constructor:ProtobufMessage.SnapShotInputMessage)
}

void SnapShotInputMessage::SharedCtor() {
  ::memset(&sequence_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&space_) -
      reinterpret_cast<char*>(&sequence_)) + sizeof(space_));
  _cached_size_ = 0;
}

SnapShotInputMessage::~SnapShotInputMessage() {
  // @@protoc_insertion_point(destructor:ProtobufMessage.SnapShotInputMessage)
  SharedDtor();
}

void SnapShotInputMessage::SharedDtor() {
}

void SnapShotInputMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SnapShotInputMessage::descriptor() {
  ::protobuf_ProtoMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SnapShotInputMessage& SnapShotInputMessage::default_instance() {
  ::protobuf_ProtoMessage_2eproto::InitDefaultsSnapShotInputMessage();
  return *internal_default_instance();
}


void SnapShotInputMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMessage.SnapShotInputMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&sequence_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&space_) -
      reinterpret_cast<char*>(&sequence_)) + sizeof(space_));
  _internal_metadata_.Clear();
}

bool SnapShotInputMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMessage.SnapShotInputMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 sequence = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sequence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool left = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &left_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool right = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &right_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool up = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &up_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool down = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &down_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool space = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &space_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMessage.SnapShotInputMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMessage.SnapShotInputMessage)
  return false;
#undef DO_
}

void SnapShotInputMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMessage.SnapShotInputMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 sequence = 1;
  if (this->sequence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sequence(), output);
  }

  // bool left = 2;
  if (this->left() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->left(), output);
  }

  // bool right = 3;
  if (this->right() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->right(), output);
  }

  // bool up = 4;
  if (this->up() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->up(), output);
  }

  // bool down = 5;
  if (this->down() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->down(), output);
  }

  // bool space = 6;
  if (this->space() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->space(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtobufMessage.SnapShotInputMessage)
}

::google::protobuf::uint8* SnapShotInputMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMessage.SnapShotInputMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 sequence = 1;
  if (this->sequence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sequence(), target);
  }

  // bool left = 2;
  if (this->left() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->left(), target);
  }

  // bool right = 3;
  if (this->right() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->right(), target);
  }

  // bool up = 4;
  if (this->up() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->up(), target);
  }

  // bool down = 5;
  if (this->down() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->down(), target);
  }

  // bool space = 6;
  if (this->space() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->space(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMessage.SnapShotInputMessage)
  return target;
}

size_t SnapShotInputMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMessage.SnapShotInputMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 sequence = 1;
  if (this->sequence() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sequence());
  }

  // bool left = 2;
  if (this->left() != 0) {
    total_size += 1 + 1;
  }

  // bool right = 3;
  if (this->right() != 0) {
    total_size += 1 + 1;
  }

  // bool up = 4;
  if (this->up() != 0) {
    total_size += 1 + 1;
  }

  // bool down = 5;
  if (this->down() != 0) {
    total_size += 1 + 1;
  }

  // bool space = 6;
  if (this->space() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SnapShotInputMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMessage.SnapShotInputMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const SnapShotInputMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SnapShotInputMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMessage.SnapShotInputMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMessage.SnapShotInputMessage)
    MergeFrom(*source);
  }
}

void SnapShotInputMessage::MergeFrom(const SnapShotInputMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMessage.SnapShotInputMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sequence() != 0) {
    set_sequence(from.sequence());
  }
  if (from.left() != 0) {
    set_left(from.left());
  }
  if (from.right() != 0) {
    set_right(from.right());
  }
  if (from.up() != 0) {
    set_up(from.up());
  }
  if (from.down() != 0) {
    set_down(from.down());
  }
  if (from.space() != 0) {
    set_space(from.space());
  }
}

void SnapShotInputMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMessage.SnapShotInputMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SnapShotInputMessage::CopyFrom(const SnapShotInputMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMessage.SnapShotInputMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SnapShotInputMessage::IsInitialized() const {
  return true;
}

void SnapShotInputMessage::Swap(SnapShotInputMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SnapShotInputMessage::InternalSwap(SnapShotInputMessage* other) {
  using std::swap;
  swap(sequence_, other->sequence_);
  swap(left_, other->left_);
  swap(right_, other->right_);
  swap(up_, other->up_);
  swap(down_, other->down_);
  swap(space_, other->space_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SnapShotInputMessage::GetMetadata() const {
  protobuf_ProtoMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UDPMessageSnapshot::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UDPMessageSnapshot::kNetidFieldNumber;
const int UDPMessageSnapshot::kPositionXFieldNumber;
const int UDPMessageSnapshot::kPositionYFieldNumber;
const int UDPMessageSnapshot::kAngleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UDPMessageSnapshot::UDPMessageSnapshot()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtoMessage_2eproto::InitDefaultsUDPMessageSnapshot();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMessage.UDPMessageSnapshot)
}
UDPMessageSnapshot::UDPMessageSnapshot(const UDPMessageSnapshot& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&netid_, &from.netid_,
    static_cast<size_t>(reinterpret_cast<char*>(&angle_) -
    reinterpret_cast<char*>(&netid_)) + sizeof(angle_));
  // @@protoc_insertion_point(copy_constructor:ProtobufMessage.UDPMessageSnapshot)
}

void UDPMessageSnapshot::SharedCtor() {
  ::memset(&netid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&angle_) -
      reinterpret_cast<char*>(&netid_)) + sizeof(angle_));
  _cached_size_ = 0;
}

UDPMessageSnapshot::~UDPMessageSnapshot() {
  // @@protoc_insertion_point(destructor:ProtobufMessage.UDPMessageSnapshot)
  SharedDtor();
}

void UDPMessageSnapshot::SharedDtor() {
}

void UDPMessageSnapshot::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UDPMessageSnapshot::descriptor() {
  ::protobuf_ProtoMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UDPMessageSnapshot& UDPMessageSnapshot::default_instance() {
  ::protobuf_ProtoMessage_2eproto::InitDefaultsUDPMessageSnapshot();
  return *internal_default_instance();
}


void UDPMessageSnapshot::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMessage.UDPMessageSnapshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&netid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&angle_) -
      reinterpret_cast<char*>(&netid_)) + sizeof(angle_));
  _internal_metadata_.Clear();
}

bool UDPMessageSnapshot::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMessage.UDPMessageSnapshot)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 netid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &netid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float positionX = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &positionx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float positionY = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &positiony_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float angle = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMessage.UDPMessageSnapshot)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMessage.UDPMessageSnapshot)
  return false;
#undef DO_
}

void UDPMessageSnapshot::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMessage.UDPMessageSnapshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 netid = 1;
  if (this->netid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->netid(), output);
  }

  // float positionX = 2;
  if (this->positionx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->positionx(), output);
  }

  // float positionY = 3;
  if (this->positiony() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->positiony(), output);
  }

  // float angle = 4;
  if (this->angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->angle(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtobufMessage.UDPMessageSnapshot)
}

::google::protobuf::uint8* UDPMessageSnapshot::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMessage.UDPMessageSnapshot)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 netid = 1;
  if (this->netid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->netid(), target);
  }

  // float positionX = 2;
  if (this->positionx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->positionx(), target);
  }

  // float positionY = 3;
  if (this->positiony() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->positiony(), target);
  }

  // float angle = 4;
  if (this->angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->angle(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMessage.UDPMessageSnapshot)
  return target;
}

size_t UDPMessageSnapshot::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMessage.UDPMessageSnapshot)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 netid = 1;
  if (this->netid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->netid());
  }

  // float positionX = 2;
  if (this->positionx() != 0) {
    total_size += 1 + 4;
  }

  // float positionY = 3;
  if (this->positiony() != 0) {
    total_size += 1 + 4;
  }

  // float angle = 4;
  if (this->angle() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UDPMessageSnapshot::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMessage.UDPMessageSnapshot)
  GOOGLE_DCHECK_NE(&from, this);
  const UDPMessageSnapshot* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UDPMessageSnapshot>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMessage.UDPMessageSnapshot)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMessage.UDPMessageSnapshot)
    MergeFrom(*source);
  }
}

void UDPMessageSnapshot::MergeFrom(const UDPMessageSnapshot& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMessage.UDPMessageSnapshot)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.netid() != 0) {
    set_netid(from.netid());
  }
  if (from.positionx() != 0) {
    set_positionx(from.positionx());
  }
  if (from.positiony() != 0) {
    set_positiony(from.positiony());
  }
  if (from.angle() != 0) {
    set_angle(from.angle());
  }
}

void UDPMessageSnapshot::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMessage.UDPMessageSnapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UDPMessageSnapshot::CopyFrom(const UDPMessageSnapshot& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMessage.UDPMessageSnapshot)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UDPMessageSnapshot::IsInitialized() const {
  return true;
}

void UDPMessageSnapshot::Swap(UDPMessageSnapshot* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UDPMessageSnapshot::InternalSwap(UDPMessageSnapshot* other) {
  using std::swap;
  swap(netid_, other->netid_);
  swap(positionx_, other->positionx_);
  swap(positiony_, other->positiony_);
  swap(angle_, other->angle_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UDPMessageSnapshot::GetMetadata() const {
  protobuf_ProtoMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StateMessage_Input::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StateMessage_Input::kLeftFieldNumber;
const int StateMessage_Input::kRightFieldNumber;
const int StateMessage_Input::kUpFieldNumber;
const int StateMessage_Input::kDownFieldNumber;
const int StateMessage_Input::kSpaceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StateMessage_Input::StateMessage_Input()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtoMessage_2eproto::InitDefaultsStateMessage_Input();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMessage.StateMessage.Input)
}
StateMessage_Input::StateMessage_Input(const StateMessage_Input& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&left_, &from.left_,
    static_cast<size_t>(reinterpret_cast<char*>(&space_) -
    reinterpret_cast<char*>(&left_)) + sizeof(space_));
  // @@protoc_insertion_point(copy_constructor:ProtobufMessage.StateMessage.Input)
}

void StateMessage_Input::SharedCtor() {
  ::memset(&left_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&space_) -
      reinterpret_cast<char*>(&left_)) + sizeof(space_));
  _cached_size_ = 0;
}

StateMessage_Input::~StateMessage_Input() {
  // @@protoc_insertion_point(destructor:ProtobufMessage.StateMessage.Input)
  SharedDtor();
}

void StateMessage_Input::SharedDtor() {
}

void StateMessage_Input::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StateMessage_Input::descriptor() {
  ::protobuf_ProtoMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StateMessage_Input& StateMessage_Input::default_instance() {
  ::protobuf_ProtoMessage_2eproto::InitDefaultsStateMessage_Input();
  return *internal_default_instance();
}


void StateMessage_Input::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMessage.StateMessage.Input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&left_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&space_) -
      reinterpret_cast<char*>(&left_)) + sizeof(space_));
  _internal_metadata_.Clear();
}

bool StateMessage_Input::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMessage.StateMessage.Input)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool left = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &left_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool right = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &right_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool up = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &up_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool down = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &down_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool space = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &space_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMessage.StateMessage.Input)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMessage.StateMessage.Input)
  return false;
#undef DO_
}

void StateMessage_Input::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMessage.StateMessage.Input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool left = 1;
  if (this->left() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->left(), output);
  }

  // bool right = 2;
  if (this->right() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->right(), output);
  }

  // bool up = 3;
  if (this->up() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->up(), output);
  }

  // bool down = 4;
  if (this->down() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->down(), output);
  }

  // bool space = 5;
  if (this->space() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->space(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtobufMessage.StateMessage.Input)
}

::google::protobuf::uint8* StateMessage_Input::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMessage.StateMessage.Input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool left = 1;
  if (this->left() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->left(), target);
  }

  // bool right = 2;
  if (this->right() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->right(), target);
  }

  // bool up = 3;
  if (this->up() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->up(), target);
  }

  // bool down = 4;
  if (this->down() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->down(), target);
  }

  // bool space = 5;
  if (this->space() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->space(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMessage.StateMessage.Input)
  return target;
}

size_t StateMessage_Input::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMessage.StateMessage.Input)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool left = 1;
  if (this->left() != 0) {
    total_size += 1 + 1;
  }

  // bool right = 2;
  if (this->right() != 0) {
    total_size += 1 + 1;
  }

  // bool up = 3;
  if (this->up() != 0) {
    total_size += 1 + 1;
  }

  // bool down = 4;
  if (this->down() != 0) {
    total_size += 1 + 1;
  }

  // bool space = 5;
  if (this->space() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StateMessage_Input::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMessage.StateMessage.Input)
  GOOGLE_DCHECK_NE(&from, this);
  const StateMessage_Input* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StateMessage_Input>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMessage.StateMessage.Input)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMessage.StateMessage.Input)
    MergeFrom(*source);
  }
}

void StateMessage_Input::MergeFrom(const StateMessage_Input& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMessage.StateMessage.Input)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.left() != 0) {
    set_left(from.left());
  }
  if (from.right() != 0) {
    set_right(from.right());
  }
  if (from.up() != 0) {
    set_up(from.up());
  }
  if (from.down() != 0) {
    set_down(from.down());
  }
  if (from.space() != 0) {
    set_space(from.space());
  }
}

void StateMessage_Input::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMessage.StateMessage.Input)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StateMessage_Input::CopyFrom(const StateMessage_Input& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMessage.StateMessage.Input)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateMessage_Input::IsInitialized() const {
  return true;
}

void StateMessage_Input::Swap(StateMessage_Input* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StateMessage_Input::InternalSwap(StateMessage_Input* other) {
  using std::swap;
  swap(left_, other->left_);
  swap(right_, other->right_);
  swap(up_, other->up_);
  swap(down_, other->down_);
  swap(space_, other->space_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StateMessage_Input::GetMetadata() const {
  protobuf_ProtoMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StateMessage_Objectstate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StateMessage_Objectstate::kIndexFieldNumber;
const int StateMessage_Objectstate::kAbsoluteValueFieldNumber;
const int StateMessage_Objectstate::kBaseSequenceFieldNumber;
const int StateMessage_Objectstate::kPositionXFieldNumber;
const int StateMessage_Objectstate::kPositionYFieldNumber;
const int StateMessage_Objectstate::kAngleFieldNumber;
const int StateMessage_Objectstate::kLinearVelocityXFieldNumber;
const int StateMessage_Objectstate::kLinearVelocityYFieldNumber;
const int StateMessage_Objectstate::kAngularVelocityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StateMessage_Objectstate::StateMessage_Objectstate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtoMessage_2eproto::InitDefaultsStateMessage_Objectstate();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMessage.StateMessage.Objectstate)
}
StateMessage_Objectstate::StateMessage_Objectstate(const StateMessage_Objectstate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&index_, &from.index_,
    static_cast<size_t>(reinterpret_cast<char*>(&angular_velocity_) -
    reinterpret_cast<char*>(&index_)) + sizeof(angular_velocity_));
  // @@protoc_insertion_point(copy_constructor:ProtobufMessage.StateMessage.Objectstate)
}

void StateMessage_Objectstate::SharedCtor() {
  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&angular_velocity_) -
      reinterpret_cast<char*>(&index_)) + sizeof(angular_velocity_));
  _cached_size_ = 0;
}

StateMessage_Objectstate::~StateMessage_Objectstate() {
  // @@protoc_insertion_point(destructor:ProtobufMessage.StateMessage.Objectstate)
  SharedDtor();
}

void StateMessage_Objectstate::SharedDtor() {
}

void StateMessage_Objectstate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StateMessage_Objectstate::descriptor() {
  ::protobuf_ProtoMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StateMessage_Objectstate& StateMessage_Objectstate::default_instance() {
  ::protobuf_ProtoMessage_2eproto::InitDefaultsStateMessage_Objectstate();
  return *internal_default_instance();
}


void StateMessage_Objectstate::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMessage.StateMessage.Objectstate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&index_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&angular_velocity_) -
      reinterpret_cast<char*>(&index_)) + sizeof(angular_velocity_));
  _internal_metadata_.Clear();
}

bool StateMessage_Objectstate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMessage.StateMessage.Objectstate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 index = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool absoluteValue = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &absolutevalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 baseSequence = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &basesequence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float positionX = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &positionx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float positionY = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &positiony_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float angle = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float linear_velocityX = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &linear_velocityx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float linear_velocityY = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &linear_velocityy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float angular_velocity = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angular_velocity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMessage.StateMessage.Objectstate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMessage.StateMessage.Objectstate)
  return false;
#undef DO_
}

void StateMessage_Objectstate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMessage.StateMessage.Objectstate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->index(), output);
  }

  // bool absoluteValue = 2;
  if (this->absolutevalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->absolutevalue(), output);
  }

  // int32 baseSequence = 3;
  if (this->basesequence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->basesequence(), output);
  }

  // float positionX = 4;
  if (this->positionx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->positionx(), output);
  }

  // float positionY = 5;
  if (this->positiony() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->positiony(), output);
  }

  // float angle = 6;
  if (this->angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->angle(), output);
  }

  // float linear_velocityX = 7;
  if (this->linear_velocityx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->linear_velocityx(), output);
  }

  // float linear_velocityY = 8;
  if (this->linear_velocityy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->linear_velocityy(), output);
  }

  // float angular_velocity = 9;
  if (this->angular_velocity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->angular_velocity(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtobufMessage.StateMessage.Objectstate)
}

::google::protobuf::uint8* StateMessage_Objectstate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMessage.StateMessage.Objectstate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 index = 1;
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->index(), target);
  }

  // bool absoluteValue = 2;
  if (this->absolutevalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->absolutevalue(), target);
  }

  // int32 baseSequence = 3;
  if (this->basesequence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->basesequence(), target);
  }

  // float positionX = 4;
  if (this->positionx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->positionx(), target);
  }

  // float positionY = 5;
  if (this->positiony() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->positiony(), target);
  }

  // float angle = 6;
  if (this->angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->angle(), target);
  }

  // float linear_velocityX = 7;
  if (this->linear_velocityx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->linear_velocityx(), target);
  }

  // float linear_velocityY = 8;
  if (this->linear_velocityy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->linear_velocityy(), target);
  }

  // float angular_velocity = 9;
  if (this->angular_velocity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->angular_velocity(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMessage.StateMessage.Objectstate)
  return target;
}

size_t StateMessage_Objectstate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMessage.StateMessage.Objectstate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 index = 1;
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->index());
  }

  // bool absoluteValue = 2;
  if (this->absolutevalue() != 0) {
    total_size += 1 + 1;
  }

  // int32 baseSequence = 3;
  if (this->basesequence() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->basesequence());
  }

  // float positionX = 4;
  if (this->positionx() != 0) {
    total_size += 1 + 4;
  }

  // float positionY = 5;
  if (this->positiony() != 0) {
    total_size += 1 + 4;
  }

  // float angle = 6;
  if (this->angle() != 0) {
    total_size += 1 + 4;
  }

  // float linear_velocityX = 7;
  if (this->linear_velocityx() != 0) {
    total_size += 1 + 4;
  }

  // float linear_velocityY = 8;
  if (this->linear_velocityy() != 0) {
    total_size += 1 + 4;
  }

  // float angular_velocity = 9;
  if (this->angular_velocity() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StateMessage_Objectstate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMessage.StateMessage.Objectstate)
  GOOGLE_DCHECK_NE(&from, this);
  const StateMessage_Objectstate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StateMessage_Objectstate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMessage.StateMessage.Objectstate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMessage.StateMessage.Objectstate)
    MergeFrom(*source);
  }
}

void StateMessage_Objectstate::MergeFrom(const StateMessage_Objectstate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMessage.StateMessage.Objectstate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.index() != 0) {
    set_index(from.index());
  }
  if (from.absolutevalue() != 0) {
    set_absolutevalue(from.absolutevalue());
  }
  if (from.basesequence() != 0) {
    set_basesequence(from.basesequence());
  }
  if (from.positionx() != 0) {
    set_positionx(from.positionx());
  }
  if (from.positiony() != 0) {
    set_positiony(from.positiony());
  }
  if (from.angle() != 0) {
    set_angle(from.angle());
  }
  if (from.linear_velocityx() != 0) {
    set_linear_velocityx(from.linear_velocityx());
  }
  if (from.linear_velocityy() != 0) {
    set_linear_velocityy(from.linear_velocityy());
  }
  if (from.angular_velocity() != 0) {
    set_angular_velocity(from.angular_velocity());
  }
}

void StateMessage_Objectstate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMessage.StateMessage.Objectstate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StateMessage_Objectstate::CopyFrom(const StateMessage_Objectstate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMessage.StateMessage.Objectstate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateMessage_Objectstate::IsInitialized() const {
  return true;
}

void StateMessage_Objectstate::Swap(StateMessage_Objectstate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StateMessage_Objectstate::InternalSwap(StateMessage_Objectstate* other) {
  using std::swap;
  swap(index_, other->index_);
  swap(absolutevalue_, other->absolutevalue_);
  swap(basesequence_, other->basesequence_);
  swap(positionx_, other->positionx_);
  swap(positiony_, other->positiony_);
  swap(angle_, other->angle_);
  swap(linear_velocityx_, other->linear_velocityx_);
  swap(linear_velocityy_, other->linear_velocityy_);
  swap(angular_velocity_, other->angular_velocity_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StateMessage_Objectstate::GetMetadata() const {
  protobuf_ProtoMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StateMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StateMessage::kNetIDFieldNumber;
const int StateMessage::kSequenceFieldNumber;
const int StateMessage::kBaseACKSequenceFieldNumber;
const int StateMessage::kInputsFieldNumber;
const int StateMessage::kObjectstateFieldNumber;
const int StateMessage::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StateMessage::StateMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtoMessage_2eproto::InitDefaultsStateMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMessage.StateMessage)
}
StateMessage::StateMessage(const StateMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      inputs_(from.inputs_),
      objectstate_(from.objectstate_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&netid_, &from.netid_,
    static_cast<size_t>(reinterpret_cast<char*>(&timestamp_) -
    reinterpret_cast<char*>(&netid_)) + sizeof(timestamp_));
  // @@protoc_insertion_point(copy_constructor:ProtobufMessage.StateMessage)
}

void StateMessage::SharedCtor() {
  ::memset(&netid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&netid_)) + sizeof(timestamp_));
  _cached_size_ = 0;
}

StateMessage::~StateMessage() {
  // @@protoc_insertion_point(destructor:ProtobufMessage.StateMessage)
  SharedDtor();
}

void StateMessage::SharedDtor() {
}

void StateMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StateMessage::descriptor() {
  ::protobuf_ProtoMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StateMessage& StateMessage::default_instance() {
  ::protobuf_ProtoMessage_2eproto::InitDefaultsStateMessage();
  return *internal_default_instance();
}


void StateMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMessage.StateMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  inputs_.Clear();
  objectstate_.Clear();
  ::memset(&netid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&netid_)) + sizeof(timestamp_));
  _internal_metadata_.Clear();
}

bool StateMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMessage.StateMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 netID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &netid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sequence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sequence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 baseACKSequence = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &baseacksequence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ProtobufMessage.StateMessage.Input inputs = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_inputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ProtobufMessage.StateMessage.Objectstate objectstate = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_objectstate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float timestamp = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMessage.StateMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMessage.StateMessage)
  return false;
#undef DO_
}

void StateMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMessage.StateMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 netID = 1;
  if (this->netid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->netid(), output);
  }

  // int32 sequence = 2;
  if (this->sequence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sequence(), output);
  }

  // int32 baseACKSequence = 3;
  if (this->baseacksequence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->baseacksequence(), output);
  }

  // repeated .ProtobufMessage.StateMessage.Input inputs = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inputs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->inputs(static_cast<int>(i)),
      output);
  }

  // repeated .ProtobufMessage.StateMessage.Objectstate objectstate = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->objectstate_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->objectstate(static_cast<int>(i)),
      output);
  }

  // float timestamp = 6;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtobufMessage.StateMessage)
}

::google::protobuf::uint8* StateMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMessage.StateMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 netID = 1;
  if (this->netid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->netid(), target);
  }

  // int32 sequence = 2;
  if (this->sequence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sequence(), target);
  }

  // int32 baseACKSequence = 3;
  if (this->baseacksequence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->baseacksequence(), target);
  }

  // repeated .ProtobufMessage.StateMessage.Input inputs = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inputs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->inputs(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ProtobufMessage.StateMessage.Objectstate objectstate = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->objectstate_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->objectstate(static_cast<int>(i)), deterministic, target);
  }

  // float timestamp = 6;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMessage.StateMessage)
  return target;
}

size_t StateMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMessage.StateMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ProtobufMessage.StateMessage.Input inputs = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->inputs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->inputs(static_cast<int>(i)));
    }
  }

  // repeated .ProtobufMessage.StateMessage.Objectstate objectstate = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->objectstate_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->objectstate(static_cast<int>(i)));
    }
  }

  // int32 netID = 1;
  if (this->netid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->netid());
  }

  // int32 sequence = 2;
  if (this->sequence() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sequence());
  }

  // int32 baseACKSequence = 3;
  if (this->baseacksequence() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->baseacksequence());
  }

  // float timestamp = 6;
  if (this->timestamp() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StateMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMessage.StateMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const StateMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StateMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMessage.StateMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMessage.StateMessage)
    MergeFrom(*source);
  }
}

void StateMessage::MergeFrom(const StateMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMessage.StateMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  inputs_.MergeFrom(from.inputs_);
  objectstate_.MergeFrom(from.objectstate_);
  if (from.netid() != 0) {
    set_netid(from.netid());
  }
  if (from.sequence() != 0) {
    set_sequence(from.sequence());
  }
  if (from.baseacksequence() != 0) {
    set_baseacksequence(from.baseacksequence());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void StateMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMessage.StateMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StateMessage::CopyFrom(const StateMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMessage.StateMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateMessage::IsInitialized() const {
  return true;
}

void StateMessage::Swap(StateMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StateMessage::InternalSwap(StateMessage* other) {
  using std::swap;
  CastToBase(&inputs_)->InternalSwap(CastToBase(&other->inputs_));
  CastToBase(&objectstate_)->InternalSwap(CastToBase(&other->objectstate_));
  swap(netid_, other->netid_);
  swap(sequence_, other->sequence_);
  swap(baseacksequence_, other->baseacksequence_);
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StateMessage::GetMetadata() const {
  protobuf_ProtoMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void UDPStringMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UDPStringMessage::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UDPStringMessage::UDPStringMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtoMessage_2eproto::InitDefaultsUDPStringMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMessage.UDPStringMessage)
}
UDPStringMessage::UDPStringMessage(const UDPStringMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  // @@protoc_insertion_point(copy_constructor:ProtobufMessage.UDPStringMessage)
}

void UDPStringMessage::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

UDPStringMessage::~UDPStringMessage() {
  // @@protoc_insertion_point(destructor:ProtobufMessage.UDPStringMessage)
  SharedDtor();
}

void UDPStringMessage::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void UDPStringMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UDPStringMessage::descriptor() {
  ::protobuf_ProtoMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UDPStringMessage& UDPStringMessage::default_instance() {
  ::protobuf_ProtoMessage_2eproto::InitDefaultsUDPStringMessage();
  return *internal_default_instance();
}


void UDPStringMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMessage.UDPStringMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool UDPStringMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMessage.UDPStringMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufMessage.UDPStringMessage.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMessage.UDPStringMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMessage.UDPStringMessage)
  return false;
#undef DO_
}

void UDPStringMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMessage.UDPStringMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMessage.UDPStringMessage.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->msg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtobufMessage.UDPStringMessage)
}

::google::protobuf::uint8* UDPStringMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMessage.UDPStringMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMessage.UDPStringMessage.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->msg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMessage.UDPStringMessage)
  return target;
}

size_t UDPStringMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMessage.UDPStringMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg = 1;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UDPStringMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMessage.UDPStringMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const UDPStringMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UDPStringMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMessage.UDPStringMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMessage.UDPStringMessage)
    MergeFrom(*source);
  }
}

void UDPStringMessage::MergeFrom(const UDPStringMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMessage.UDPStringMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
}

void UDPStringMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMessage.UDPStringMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UDPStringMessage::CopyFrom(const UDPStringMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMessage.UDPStringMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UDPStringMessage::IsInitialized() const {
  return true;
}

void UDPStringMessage::Swap(UDPStringMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UDPStringMessage::InternalSwap(UDPStringMessage* other) {
  using std::swap;
  msg_.Swap(&other->msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UDPStringMessage::GetMetadata() const {
  protobuf_ProtoMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StateACKPacket::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StateACKPacket::kNetIDFieldNumber;
const int StateACKPacket::kAckSequenceFieldNumber;
const int StateACKPacket::kAckBitsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StateACKPacket::StateACKPacket()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtoMessage_2eproto::InitDefaultsStateACKPacket();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMessage.StateACKPacket)
}
StateACKPacket::StateACKPacket(const StateACKPacket& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&netid_, &from.netid_,
    static_cast<size_t>(reinterpret_cast<char*>(&ackbits_) -
    reinterpret_cast<char*>(&netid_)) + sizeof(ackbits_));
  // @@protoc_insertion_point(copy_constructor:ProtobufMessage.StateACKPacket)
}

void StateACKPacket::SharedCtor() {
  ::memset(&netid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ackbits_) -
      reinterpret_cast<char*>(&netid_)) + sizeof(ackbits_));
  _cached_size_ = 0;
}

StateACKPacket::~StateACKPacket() {
  // @@protoc_insertion_point(destructor:ProtobufMessage.StateACKPacket)
  SharedDtor();
}

void StateACKPacket::SharedDtor() {
}

void StateACKPacket::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StateACKPacket::descriptor() {
  ::protobuf_ProtoMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StateACKPacket& StateACKPacket::default_instance() {
  ::protobuf_ProtoMessage_2eproto::InitDefaultsStateACKPacket();
  return *internal_default_instance();
}


void StateACKPacket::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMessage.StateACKPacket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&netid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ackbits_) -
      reinterpret_cast<char*>(&netid_)) + sizeof(ackbits_));
  _internal_metadata_.Clear();
}

bool StateACKPacket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMessage.StateACKPacket)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 netID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &netid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ackSequence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &acksequence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 ackBits = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ackbits_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMessage.StateACKPacket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMessage.StateACKPacket)
  return false;
#undef DO_
}

void StateACKPacket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMessage.StateACKPacket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 netID = 1;
  if (this->netid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->netid(), output);
  }

  // int32 ackSequence = 2;
  if (this->acksequence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->acksequence(), output);
  }

  // int32 ackBits = 3;
  if (this->ackbits() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->ackbits(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtobufMessage.StateACKPacket)
}

::google::protobuf::uint8* StateACKPacket::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMessage.StateACKPacket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 netID = 1;
  if (this->netid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->netid(), target);
  }

  // int32 ackSequence = 2;
  if (this->acksequence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->acksequence(), target);
  }

  // int32 ackBits = 3;
  if (this->ackbits() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->ackbits(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMessage.StateACKPacket)
  return target;
}

size_t StateACKPacket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMessage.StateACKPacket)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 netID = 1;
  if (this->netid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->netid());
  }

  // int32 ackSequence = 2;
  if (this->acksequence() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->acksequence());
  }

  // int32 ackBits = 3;
  if (this->ackbits() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ackbits());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StateACKPacket::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMessage.StateACKPacket)
  GOOGLE_DCHECK_NE(&from, this);
  const StateACKPacket* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StateACKPacket>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMessage.StateACKPacket)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMessage.StateACKPacket)
    MergeFrom(*source);
  }
}

void StateACKPacket::MergeFrom(const StateACKPacket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMessage.StateACKPacket)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.netid() != 0) {
    set_netid(from.netid());
  }
  if (from.acksequence() != 0) {
    set_acksequence(from.acksequence());
  }
  if (from.ackbits() != 0) {
    set_ackbits(from.ackbits());
  }
}

void StateACKPacket::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMessage.StateACKPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StateACKPacket::CopyFrom(const StateACKPacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMessage.StateACKPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StateACKPacket::IsInitialized() const {
  return true;
}

void StateACKPacket::Swap(StateACKPacket* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StateACKPacket::InternalSwap(StateACKPacket* other) {
  using std::swap;
  swap(netid_, other->netid_);
  swap(acksequence_, other->acksequence_);
  swap(ackbits_, other->ackbits_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StateACKPacket::GetMetadata() const {
  protobuf_ProtoMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void TCPMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TCPMessage::kMsgFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TCPMessage::TCPMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtoMessage_2eproto::InitDefaultsTCPMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMessage.TCPMessage)
}
TCPMessage::TCPMessage(const TCPMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msg().size() > 0) {
    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  // @@protoc_insertion_point(copy_constructor:ProtobufMessage.TCPMessage)
}

void TCPMessage::SharedCtor() {
  msg_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TCPMessage::~TCPMessage() {
  // @@protoc_insertion_point(destructor:ProtobufMessage.TCPMessage)
  SharedDtor();
}

void TCPMessage::SharedDtor() {
  msg_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TCPMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TCPMessage::descriptor() {
  ::protobuf_ProtoMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TCPMessage& TCPMessage::default_instance() {
  ::protobuf_ProtoMessage_2eproto::InitDefaultsTCPMessage();
  return *internal_default_instance();
}


void TCPMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMessage.TCPMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool TCPMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMessage.TCPMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string msg = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_msg()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->msg().data(), static_cast<int>(this->msg().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ProtobufMessage.TCPMessage.msg"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMessage.TCPMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMessage.TCPMessage)
  return false;
#undef DO_
}

void TCPMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMessage.TCPMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMessage.TCPMessage.msg");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->msg(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtobufMessage.TCPMessage)
}

::google::protobuf::uint8* TCPMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMessage.TCPMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string msg = 1;
  if (this->msg().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->msg().data(), static_cast<int>(this->msg().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ProtobufMessage.TCPMessage.msg");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->msg(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMessage.TCPMessage)
  return target;
}

size_t TCPMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMessage.TCPMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string msg = 1;
  if (this->msg().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->msg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TCPMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMessage.TCPMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const TCPMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TCPMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMessage.TCPMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMessage.TCPMessage)
    MergeFrom(*source);
  }
}

void TCPMessage::MergeFrom(const TCPMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMessage.TCPMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msg().size() > 0) {

    msg_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
}

void TCPMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMessage.TCPMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TCPMessage::CopyFrom(const TCPMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMessage.TCPMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TCPMessage::IsInitialized() const {
  return true;
}

void TCPMessage::Swap(TCPMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TCPMessage::InternalSwap(TCPMessage* other) {
  using std::swap;
  msg_.Swap(&other->msg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TCPMessage::GetMetadata() const {
  protobuf_ProtoMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PredictionReconciliationMessage_Input::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PredictionReconciliationMessage_Input::kLeftFieldNumber;
const int PredictionReconciliationMessage_Input::kRightFieldNumber;
const int PredictionReconciliationMessage_Input::kUpFieldNumber;
const int PredictionReconciliationMessage_Input::kDownFieldNumber;
const int PredictionReconciliationMessage_Input::kSpaceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PredictionReconciliationMessage_Input::PredictionReconciliationMessage_Input()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtoMessage_2eproto::InitDefaultsPredictionReconciliationMessage_Input();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMessage.PredictionReconciliationMessage.Input)
}
PredictionReconciliationMessage_Input::PredictionReconciliationMessage_Input(const PredictionReconciliationMessage_Input& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&left_, &from.left_,
    static_cast<size_t>(reinterpret_cast<char*>(&space_) -
    reinterpret_cast<char*>(&left_)) + sizeof(space_));
  // @@protoc_insertion_point(copy_constructor:ProtobufMessage.PredictionReconciliationMessage.Input)
}

void PredictionReconciliationMessage_Input::SharedCtor() {
  ::memset(&left_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&space_) -
      reinterpret_cast<char*>(&left_)) + sizeof(space_));
  _cached_size_ = 0;
}

PredictionReconciliationMessage_Input::~PredictionReconciliationMessage_Input() {
  // @@protoc_insertion_point(destructor:ProtobufMessage.PredictionReconciliationMessage.Input)
  SharedDtor();
}

void PredictionReconciliationMessage_Input::SharedDtor() {
}

void PredictionReconciliationMessage_Input::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PredictionReconciliationMessage_Input::descriptor() {
  ::protobuf_ProtoMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PredictionReconciliationMessage_Input& PredictionReconciliationMessage_Input::default_instance() {
  ::protobuf_ProtoMessage_2eproto::InitDefaultsPredictionReconciliationMessage_Input();
  return *internal_default_instance();
}


void PredictionReconciliationMessage_Input::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMessage.PredictionReconciliationMessage.Input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&left_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&space_) -
      reinterpret_cast<char*>(&left_)) + sizeof(space_));
  _internal_metadata_.Clear();
}

bool PredictionReconciliationMessage_Input::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMessage.PredictionReconciliationMessage.Input)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool left = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &left_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool right = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &right_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool up = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &up_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool down = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &down_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool space = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &space_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMessage.PredictionReconciliationMessage.Input)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMessage.PredictionReconciliationMessage.Input)
  return false;
#undef DO_
}

void PredictionReconciliationMessage_Input::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMessage.PredictionReconciliationMessage.Input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool left = 1;
  if (this->left() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->left(), output);
  }

  // bool right = 2;
  if (this->right() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->right(), output);
  }

  // bool up = 3;
  if (this->up() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->up(), output);
  }

  // bool down = 4;
  if (this->down() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->down(), output);
  }

  // bool space = 5;
  if (this->space() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->space(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtobufMessage.PredictionReconciliationMessage.Input)
}

::google::protobuf::uint8* PredictionReconciliationMessage_Input::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMessage.PredictionReconciliationMessage.Input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool left = 1;
  if (this->left() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->left(), target);
  }

  // bool right = 2;
  if (this->right() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->right(), target);
  }

  // bool up = 3;
  if (this->up() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->up(), target);
  }

  // bool down = 4;
  if (this->down() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->down(), target);
  }

  // bool space = 5;
  if (this->space() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->space(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMessage.PredictionReconciliationMessage.Input)
  return target;
}

size_t PredictionReconciliationMessage_Input::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMessage.PredictionReconciliationMessage.Input)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool left = 1;
  if (this->left() != 0) {
    total_size += 1 + 1;
  }

  // bool right = 2;
  if (this->right() != 0) {
    total_size += 1 + 1;
  }

  // bool up = 3;
  if (this->up() != 0) {
    total_size += 1 + 1;
  }

  // bool down = 4;
  if (this->down() != 0) {
    total_size += 1 + 1;
  }

  // bool space = 5;
  if (this->space() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PredictionReconciliationMessage_Input::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMessage.PredictionReconciliationMessage.Input)
  GOOGLE_DCHECK_NE(&from, this);
  const PredictionReconciliationMessage_Input* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PredictionReconciliationMessage_Input>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMessage.PredictionReconciliationMessage.Input)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMessage.PredictionReconciliationMessage.Input)
    MergeFrom(*source);
  }
}

void PredictionReconciliationMessage_Input::MergeFrom(const PredictionReconciliationMessage_Input& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMessage.PredictionReconciliationMessage.Input)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.left() != 0) {
    set_left(from.left());
  }
  if (from.right() != 0) {
    set_right(from.right());
  }
  if (from.up() != 0) {
    set_up(from.up());
  }
  if (from.down() != 0) {
    set_down(from.down());
  }
  if (from.space() != 0) {
    set_space(from.space());
  }
}

void PredictionReconciliationMessage_Input::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMessage.PredictionReconciliationMessage.Input)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PredictionReconciliationMessage_Input::CopyFrom(const PredictionReconciliationMessage_Input& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMessage.PredictionReconciliationMessage.Input)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PredictionReconciliationMessage_Input::IsInitialized() const {
  return true;
}

void PredictionReconciliationMessage_Input::Swap(PredictionReconciliationMessage_Input* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PredictionReconciliationMessage_Input::InternalSwap(PredictionReconciliationMessage_Input* other) {
  using std::swap;
  swap(left_, other->left_);
  swap(right_, other->right_);
  swap(up_, other->up_);
  swap(down_, other->down_);
  swap(space_, other->space_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PredictionReconciliationMessage_Input::GetMetadata() const {
  protobuf_ProtoMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PredictionReconciliationMessage_Objectstate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PredictionReconciliationMessage_Objectstate::kPositionXFieldNumber;
const int PredictionReconciliationMessage_Objectstate::kPositionYFieldNumber;
const int PredictionReconciliationMessage_Objectstate::kAngleFieldNumber;
const int PredictionReconciliationMessage_Objectstate::kLinearVelocityXFieldNumber;
const int PredictionReconciliationMessage_Objectstate::kLinearVelocityYFieldNumber;
const int PredictionReconciliationMessage_Objectstate::kAngularVelocityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PredictionReconciliationMessage_Objectstate::PredictionReconciliationMessage_Objectstate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtoMessage_2eproto::InitDefaultsPredictionReconciliationMessage_Objectstate();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMessage.PredictionReconciliationMessage.Objectstate)
}
PredictionReconciliationMessage_Objectstate::PredictionReconciliationMessage_Objectstate(const PredictionReconciliationMessage_Objectstate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&positionx_, &from.positionx_,
    static_cast<size_t>(reinterpret_cast<char*>(&angular_velocity_) -
    reinterpret_cast<char*>(&positionx_)) + sizeof(angular_velocity_));
  // @@protoc_insertion_point(copy_constructor:ProtobufMessage.PredictionReconciliationMessage.Objectstate)
}

void PredictionReconciliationMessage_Objectstate::SharedCtor() {
  ::memset(&positionx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&angular_velocity_) -
      reinterpret_cast<char*>(&positionx_)) + sizeof(angular_velocity_));
  _cached_size_ = 0;
}

PredictionReconciliationMessage_Objectstate::~PredictionReconciliationMessage_Objectstate() {
  // @@protoc_insertion_point(destructor:ProtobufMessage.PredictionReconciliationMessage.Objectstate)
  SharedDtor();
}

void PredictionReconciliationMessage_Objectstate::SharedDtor() {
}

void PredictionReconciliationMessage_Objectstate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PredictionReconciliationMessage_Objectstate::descriptor() {
  ::protobuf_ProtoMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PredictionReconciliationMessage_Objectstate& PredictionReconciliationMessage_Objectstate::default_instance() {
  ::protobuf_ProtoMessage_2eproto::InitDefaultsPredictionReconciliationMessage_Objectstate();
  return *internal_default_instance();
}


void PredictionReconciliationMessage_Objectstate::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMessage.PredictionReconciliationMessage.Objectstate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&positionx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&angular_velocity_) -
      reinterpret_cast<char*>(&positionx_)) + sizeof(angular_velocity_));
  _internal_metadata_.Clear();
}

bool PredictionReconciliationMessage_Objectstate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMessage.PredictionReconciliationMessage.Objectstate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float positionX = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &positionx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float positionY = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &positiony_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float angle = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angle_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float linear_velocityX = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &linear_velocityx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float linear_velocityY = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &linear_velocityy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float angular_velocity = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &angular_velocity_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMessage.PredictionReconciliationMessage.Objectstate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMessage.PredictionReconciliationMessage.Objectstate)
  return false;
#undef DO_
}

void PredictionReconciliationMessage_Objectstate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMessage.PredictionReconciliationMessage.Objectstate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float positionX = 1;
  if (this->positionx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->positionx(), output);
  }

  // float positionY = 2;
  if (this->positiony() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->positiony(), output);
  }

  // float angle = 3;
  if (this->angle() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->angle(), output);
  }

  // float linear_velocityX = 4;
  if (this->linear_velocityx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->linear_velocityx(), output);
  }

  // float linear_velocityY = 5;
  if (this->linear_velocityy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->linear_velocityy(), output);
  }

  // float angular_velocity = 6;
  if (this->angular_velocity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->angular_velocity(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtobufMessage.PredictionReconciliationMessage.Objectstate)
}

::google::protobuf::uint8* PredictionReconciliationMessage_Objectstate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMessage.PredictionReconciliationMessage.Objectstate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float positionX = 1;
  if (this->positionx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->positionx(), target);
  }

  // float positionY = 2;
  if (this->positiony() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->positiony(), target);
  }

  // float angle = 3;
  if (this->angle() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->angle(), target);
  }

  // float linear_velocityX = 4;
  if (this->linear_velocityx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->linear_velocityx(), target);
  }

  // float linear_velocityY = 5;
  if (this->linear_velocityy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->linear_velocityy(), target);
  }

  // float angular_velocity = 6;
  if (this->angular_velocity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->angular_velocity(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMessage.PredictionReconciliationMessage.Objectstate)
  return target;
}

size_t PredictionReconciliationMessage_Objectstate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMessage.PredictionReconciliationMessage.Objectstate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float positionX = 1;
  if (this->positionx() != 0) {
    total_size += 1 + 4;
  }

  // float positionY = 2;
  if (this->positiony() != 0) {
    total_size += 1 + 4;
  }

  // float angle = 3;
  if (this->angle() != 0) {
    total_size += 1 + 4;
  }

  // float linear_velocityX = 4;
  if (this->linear_velocityx() != 0) {
    total_size += 1 + 4;
  }

  // float linear_velocityY = 5;
  if (this->linear_velocityy() != 0) {
    total_size += 1 + 4;
  }

  // float angular_velocity = 6;
  if (this->angular_velocity() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PredictionReconciliationMessage_Objectstate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMessage.PredictionReconciliationMessage.Objectstate)
  GOOGLE_DCHECK_NE(&from, this);
  const PredictionReconciliationMessage_Objectstate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PredictionReconciliationMessage_Objectstate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMessage.PredictionReconciliationMessage.Objectstate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMessage.PredictionReconciliationMessage.Objectstate)
    MergeFrom(*source);
  }
}

void PredictionReconciliationMessage_Objectstate::MergeFrom(const PredictionReconciliationMessage_Objectstate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMessage.PredictionReconciliationMessage.Objectstate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.positionx() != 0) {
    set_positionx(from.positionx());
  }
  if (from.positiony() != 0) {
    set_positiony(from.positiony());
  }
  if (from.angle() != 0) {
    set_angle(from.angle());
  }
  if (from.linear_velocityx() != 0) {
    set_linear_velocityx(from.linear_velocityx());
  }
  if (from.linear_velocityy() != 0) {
    set_linear_velocityy(from.linear_velocityy());
  }
  if (from.angular_velocity() != 0) {
    set_angular_velocity(from.angular_velocity());
  }
}

void PredictionReconciliationMessage_Objectstate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMessage.PredictionReconciliationMessage.Objectstate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PredictionReconciliationMessage_Objectstate::CopyFrom(const PredictionReconciliationMessage_Objectstate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMessage.PredictionReconciliationMessage.Objectstate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PredictionReconciliationMessage_Objectstate::IsInitialized() const {
  return true;
}

void PredictionReconciliationMessage_Objectstate::Swap(PredictionReconciliationMessage_Objectstate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PredictionReconciliationMessage_Objectstate::InternalSwap(PredictionReconciliationMessage_Objectstate* other) {
  using std::swap;
  swap(positionx_, other->positionx_);
  swap(positiony_, other->positiony_);
  swap(angle_, other->angle_);
  swap(linear_velocityx_, other->linear_velocityx_);
  swap(linear_velocityy_, other->linear_velocityy_);
  swap(angular_velocity_, other->angular_velocity_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PredictionReconciliationMessage_Objectstate::GetMetadata() const {
  protobuf_ProtoMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PredictionReconciliationMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PredictionReconciliationMessage::kNetIDFieldNumber;
const int PredictionReconciliationMessage::kSequenceFieldNumber;
const int PredictionReconciliationMessage::kInputsFieldNumber;
const int PredictionReconciliationMessage::kObjectstateFieldNumber;
const int PredictionReconciliationMessage::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PredictionReconciliationMessage::PredictionReconciliationMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtoMessage_2eproto::InitDefaultsPredictionReconciliationMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMessage.PredictionReconciliationMessage)
}
PredictionReconciliationMessage::PredictionReconciliationMessage(const PredictionReconciliationMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      inputs_(from.inputs_),
      objectstate_(from.objectstate_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&netid_, &from.netid_,
    static_cast<size_t>(reinterpret_cast<char*>(&timestamp_) -
    reinterpret_cast<char*>(&netid_)) + sizeof(timestamp_));
  // @@protoc_insertion_point(copy_constructor:ProtobufMessage.PredictionReconciliationMessage)
}

void PredictionReconciliationMessage::SharedCtor() {
  ::memset(&netid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&netid_)) + sizeof(timestamp_));
  _cached_size_ = 0;
}

PredictionReconciliationMessage::~PredictionReconciliationMessage() {
  // @@protoc_insertion_point(destructor:ProtobufMessage.PredictionReconciliationMessage)
  SharedDtor();
}

void PredictionReconciliationMessage::SharedDtor() {
}

void PredictionReconciliationMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PredictionReconciliationMessage::descriptor() {
  ::protobuf_ProtoMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PredictionReconciliationMessage& PredictionReconciliationMessage::default_instance() {
  ::protobuf_ProtoMessage_2eproto::InitDefaultsPredictionReconciliationMessage();
  return *internal_default_instance();
}


void PredictionReconciliationMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMessage.PredictionReconciliationMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  inputs_.Clear();
  objectstate_.Clear();
  ::memset(&netid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&netid_)) + sizeof(timestamp_));
  _internal_metadata_.Clear();
}

bool PredictionReconciliationMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMessage.PredictionReconciliationMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 netID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &netid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 sequence = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sequence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ProtobufMessage.PredictionReconciliationMessage.Input inputs = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_inputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ProtobufMessage.PredictionReconciliationMessage.Objectstate objectstate = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_objectstate()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float timestamp = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMessage.PredictionReconciliationMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMessage.PredictionReconciliationMessage)
  return false;
#undef DO_
}

void PredictionReconciliationMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMessage.PredictionReconciliationMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 netID = 1;
  if (this->netid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->netid(), output);
  }

  // int32 sequence = 2;
  if (this->sequence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->sequence(), output);
  }

  // repeated .ProtobufMessage.PredictionReconciliationMessage.Input inputs = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inputs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4,
      this->inputs(static_cast<int>(i)),
      output);
  }

  // repeated .ProtobufMessage.PredictionReconciliationMessage.Objectstate objectstate = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->objectstate_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5,
      this->objectstate(static_cast<int>(i)),
      output);
  }

  // float timestamp = 6;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->timestamp(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtobufMessage.PredictionReconciliationMessage)
}

::google::protobuf::uint8* PredictionReconciliationMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMessage.PredictionReconciliationMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 netID = 1;
  if (this->netid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->netid(), target);
  }

  // int32 sequence = 2;
  if (this->sequence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->sequence(), target);
  }

  // repeated .ProtobufMessage.PredictionReconciliationMessage.Input inputs = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inputs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->inputs(static_cast<int>(i)), deterministic, target);
  }

  // repeated .ProtobufMessage.PredictionReconciliationMessage.Objectstate objectstate = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->objectstate_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->objectstate(static_cast<int>(i)), deterministic, target);
  }

  // float timestamp = 6;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->timestamp(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMessage.PredictionReconciliationMessage)
  return target;
}

size_t PredictionReconciliationMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMessage.PredictionReconciliationMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ProtobufMessage.PredictionReconciliationMessage.Input inputs = 4;
  {
    unsigned int count = static_cast<unsigned int>(this->inputs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->inputs(static_cast<int>(i)));
    }
  }

  // repeated .ProtobufMessage.PredictionReconciliationMessage.Objectstate objectstate = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->objectstate_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->objectstate(static_cast<int>(i)));
    }
  }

  // int32 netID = 1;
  if (this->netid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->netid());
  }

  // int32 sequence = 2;
  if (this->sequence() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sequence());
  }

  // float timestamp = 6;
  if (this->timestamp() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PredictionReconciliationMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMessage.PredictionReconciliationMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const PredictionReconciliationMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PredictionReconciliationMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMessage.PredictionReconciliationMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMessage.PredictionReconciliationMessage)
    MergeFrom(*source);
  }
}

void PredictionReconciliationMessage::MergeFrom(const PredictionReconciliationMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMessage.PredictionReconciliationMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  inputs_.MergeFrom(from.inputs_);
  objectstate_.MergeFrom(from.objectstate_);
  if (from.netid() != 0) {
    set_netid(from.netid());
  }
  if (from.sequence() != 0) {
    set_sequence(from.sequence());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
}

void PredictionReconciliationMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMessage.PredictionReconciliationMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PredictionReconciliationMessage::CopyFrom(const PredictionReconciliationMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMessage.PredictionReconciliationMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PredictionReconciliationMessage::IsInitialized() const {
  return true;
}

void PredictionReconciliationMessage::Swap(PredictionReconciliationMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PredictionReconciliationMessage::InternalSwap(PredictionReconciliationMessage* other) {
  using std::swap;
  CastToBase(&inputs_)->InternalSwap(CastToBase(&other->inputs_));
  CastToBase(&objectstate_)->InternalSwap(CastToBase(&other->objectstate_));
  swap(netid_, other->netid_);
  swap(sequence_, other->sequence_);
  swap(timestamp_, other->timestamp_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PredictionReconciliationMessage::GetMetadata() const {
  protobuf_ProtoMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PredictionReconciliationInputMessage_Input::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PredictionReconciliationInputMessage_Input::kLeftFieldNumber;
const int PredictionReconciliationInputMessage_Input::kRightFieldNumber;
const int PredictionReconciliationInputMessage_Input::kUpFieldNumber;
const int PredictionReconciliationInputMessage_Input::kDownFieldNumber;
const int PredictionReconciliationInputMessage_Input::kSpaceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PredictionReconciliationInputMessage_Input::PredictionReconciliationInputMessage_Input()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtoMessage_2eproto::InitDefaultsPredictionReconciliationInputMessage_Input();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMessage.PredictionReconciliationInputMessage.Input)
}
PredictionReconciliationInputMessage_Input::PredictionReconciliationInputMessage_Input(const PredictionReconciliationInputMessage_Input& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&left_, &from.left_,
    static_cast<size_t>(reinterpret_cast<char*>(&space_) -
    reinterpret_cast<char*>(&left_)) + sizeof(space_));
  // @@protoc_insertion_point(copy_constructor:ProtobufMessage.PredictionReconciliationInputMessage.Input)
}

void PredictionReconciliationInputMessage_Input::SharedCtor() {
  ::memset(&left_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&space_) -
      reinterpret_cast<char*>(&left_)) + sizeof(space_));
  _cached_size_ = 0;
}

PredictionReconciliationInputMessage_Input::~PredictionReconciliationInputMessage_Input() {
  // @@protoc_insertion_point(destructor:ProtobufMessage.PredictionReconciliationInputMessage.Input)
  SharedDtor();
}

void PredictionReconciliationInputMessage_Input::SharedDtor() {
}

void PredictionReconciliationInputMessage_Input::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PredictionReconciliationInputMessage_Input::descriptor() {
  ::protobuf_ProtoMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PredictionReconciliationInputMessage_Input& PredictionReconciliationInputMessage_Input::default_instance() {
  ::protobuf_ProtoMessage_2eproto::InitDefaultsPredictionReconciliationInputMessage_Input();
  return *internal_default_instance();
}


void PredictionReconciliationInputMessage_Input::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMessage.PredictionReconciliationInputMessage.Input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&left_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&space_) -
      reinterpret_cast<char*>(&left_)) + sizeof(space_));
  _internal_metadata_.Clear();
}

bool PredictionReconciliationInputMessage_Input::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMessage.PredictionReconciliationInputMessage.Input)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool left = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &left_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool right = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &right_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool up = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &up_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool down = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &down_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool space = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &space_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMessage.PredictionReconciliationInputMessage.Input)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMessage.PredictionReconciliationInputMessage.Input)
  return false;
#undef DO_
}

void PredictionReconciliationInputMessage_Input::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMessage.PredictionReconciliationInputMessage.Input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool left = 1;
  if (this->left() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->left(), output);
  }

  // bool right = 2;
  if (this->right() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->right(), output);
  }

  // bool up = 3;
  if (this->up() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(3, this->up(), output);
  }

  // bool down = 4;
  if (this->down() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(4, this->down(), output);
  }

  // bool space = 5;
  if (this->space() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->space(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtobufMessage.PredictionReconciliationInputMessage.Input)
}

::google::protobuf::uint8* PredictionReconciliationInputMessage_Input::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMessage.PredictionReconciliationInputMessage.Input)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool left = 1;
  if (this->left() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->left(), target);
  }

  // bool right = 2;
  if (this->right() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->right(), target);
  }

  // bool up = 3;
  if (this->up() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(3, this->up(), target);
  }

  // bool down = 4;
  if (this->down() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(4, this->down(), target);
  }

  // bool space = 5;
  if (this->space() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->space(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMessage.PredictionReconciliationInputMessage.Input)
  return target;
}

size_t PredictionReconciliationInputMessage_Input::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMessage.PredictionReconciliationInputMessage.Input)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool left = 1;
  if (this->left() != 0) {
    total_size += 1 + 1;
  }

  // bool right = 2;
  if (this->right() != 0) {
    total_size += 1 + 1;
  }

  // bool up = 3;
  if (this->up() != 0) {
    total_size += 1 + 1;
  }

  // bool down = 4;
  if (this->down() != 0) {
    total_size += 1 + 1;
  }

  // bool space = 5;
  if (this->space() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PredictionReconciliationInputMessage_Input::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMessage.PredictionReconciliationInputMessage.Input)
  GOOGLE_DCHECK_NE(&from, this);
  const PredictionReconciliationInputMessage_Input* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PredictionReconciliationInputMessage_Input>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMessage.PredictionReconciliationInputMessage.Input)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMessage.PredictionReconciliationInputMessage.Input)
    MergeFrom(*source);
  }
}

void PredictionReconciliationInputMessage_Input::MergeFrom(const PredictionReconciliationInputMessage_Input& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMessage.PredictionReconciliationInputMessage.Input)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.left() != 0) {
    set_left(from.left());
  }
  if (from.right() != 0) {
    set_right(from.right());
  }
  if (from.up() != 0) {
    set_up(from.up());
  }
  if (from.down() != 0) {
    set_down(from.down());
  }
  if (from.space() != 0) {
    set_space(from.space());
  }
}

void PredictionReconciliationInputMessage_Input::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMessage.PredictionReconciliationInputMessage.Input)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PredictionReconciliationInputMessage_Input::CopyFrom(const PredictionReconciliationInputMessage_Input& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMessage.PredictionReconciliationInputMessage.Input)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PredictionReconciliationInputMessage_Input::IsInitialized() const {
  return true;
}

void PredictionReconciliationInputMessage_Input::Swap(PredictionReconciliationInputMessage_Input* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PredictionReconciliationInputMessage_Input::InternalSwap(PredictionReconciliationInputMessage_Input* other) {
  using std::swap;
  swap(left_, other->left_);
  swap(right_, other->right_);
  swap(up_, other->up_);
  swap(down_, other->down_);
  swap(space_, other->space_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PredictionReconciliationInputMessage_Input::GetMetadata() const {
  protobuf_ProtoMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PredictionReconciliationInputMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PredictionReconciliationInputMessage::kSequenceFieldNumber;
const int PredictionReconciliationInputMessage::kNetidFieldNumber;
const int PredictionReconciliationInputMessage::kInputsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PredictionReconciliationInputMessage::PredictionReconciliationInputMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtoMessage_2eproto::InitDefaultsPredictionReconciliationInputMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMessage.PredictionReconciliationInputMessage)
}
PredictionReconciliationInputMessage::PredictionReconciliationInputMessage(const PredictionReconciliationInputMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      inputs_(from.inputs_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&sequence_, &from.sequence_,
    static_cast<size_t>(reinterpret_cast<char*>(&netid_) -
    reinterpret_cast<char*>(&sequence_)) + sizeof(netid_));
  // @@protoc_insertion_point(copy_constructor:ProtobufMessage.PredictionReconciliationInputMessage)
}

void PredictionReconciliationInputMessage::SharedCtor() {
  ::memset(&sequence_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&netid_) -
      reinterpret_cast<char*>(&sequence_)) + sizeof(netid_));
  _cached_size_ = 0;
}

PredictionReconciliationInputMessage::~PredictionReconciliationInputMessage() {
  // @@protoc_insertion_point(destructor:ProtobufMessage.PredictionReconciliationInputMessage)
  SharedDtor();
}

void PredictionReconciliationInputMessage::SharedDtor() {
}

void PredictionReconciliationInputMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PredictionReconciliationInputMessage::descriptor() {
  ::protobuf_ProtoMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PredictionReconciliationInputMessage& PredictionReconciliationInputMessage::default_instance() {
  ::protobuf_ProtoMessage_2eproto::InitDefaultsPredictionReconciliationInputMessage();
  return *internal_default_instance();
}


void PredictionReconciliationInputMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMessage.PredictionReconciliationInputMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  inputs_.Clear();
  ::memset(&sequence_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&netid_) -
      reinterpret_cast<char*>(&sequence_)) + sizeof(netid_));
  _internal_metadata_.Clear();
}

bool PredictionReconciliationInputMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMessage.PredictionReconciliationInputMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 sequence = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sequence_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 netid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &netid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .ProtobufMessage.PredictionReconciliationInputMessage.Input inputs = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_inputs()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMessage.PredictionReconciliationInputMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMessage.PredictionReconciliationInputMessage)
  return false;
#undef DO_
}

void PredictionReconciliationInputMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMessage.PredictionReconciliationInputMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 sequence = 1;
  if (this->sequence() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->sequence(), output);
  }

  // int32 netid = 2;
  if (this->netid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->netid(), output);
  }

  // repeated .ProtobufMessage.PredictionReconciliationInputMessage.Input inputs = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inputs_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->inputs(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtobufMessage.PredictionReconciliationInputMessage)
}

::google::protobuf::uint8* PredictionReconciliationInputMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMessage.PredictionReconciliationInputMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 sequence = 1;
  if (this->sequence() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->sequence(), target);
  }

  // int32 netid = 2;
  if (this->netid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->netid(), target);
  }

  // repeated .ProtobufMessage.PredictionReconciliationInputMessage.Input inputs = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->inputs_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->inputs(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMessage.PredictionReconciliationInputMessage)
  return target;
}

size_t PredictionReconciliationInputMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMessage.PredictionReconciliationInputMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ProtobufMessage.PredictionReconciliationInputMessage.Input inputs = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->inputs_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->inputs(static_cast<int>(i)));
    }
  }

  // int32 sequence = 1;
  if (this->sequence() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sequence());
  }

  // int32 netid = 2;
  if (this->netid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->netid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PredictionReconciliationInputMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMessage.PredictionReconciliationInputMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const PredictionReconciliationInputMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PredictionReconciliationInputMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMessage.PredictionReconciliationInputMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMessage.PredictionReconciliationInputMessage)
    MergeFrom(*source);
  }
}

void PredictionReconciliationInputMessage::MergeFrom(const PredictionReconciliationInputMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMessage.PredictionReconciliationInputMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  inputs_.MergeFrom(from.inputs_);
  if (from.sequence() != 0) {
    set_sequence(from.sequence());
  }
  if (from.netid() != 0) {
    set_netid(from.netid());
  }
}

void PredictionReconciliationInputMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMessage.PredictionReconciliationInputMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PredictionReconciliationInputMessage::CopyFrom(const PredictionReconciliationInputMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMessage.PredictionReconciliationInputMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PredictionReconciliationInputMessage::IsInitialized() const {
  return true;
}

void PredictionReconciliationInputMessage::Swap(PredictionReconciliationInputMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PredictionReconciliationInputMessage::InternalSwap(PredictionReconciliationInputMessage* other) {
  using std::swap;
  CastToBase(&inputs_)->InternalSwap(CastToBase(&other->inputs_));
  swap(sequence_, other->sequence_);
  swap(netid_, other->netid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PredictionReconciliationInputMessage::GetMetadata() const {
  protobuf_ProtoMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ServerTimeRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ServerTimeRequest::kClientIDFieldNumber;
const int ServerTimeRequest::kClienttimeFieldNumber;
const int ServerTimeRequest::kServertimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ServerTimeRequest::ServerTimeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtoMessage_2eproto::InitDefaultsServerTimeRequest();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtobufMessage.ServerTimeRequest)
}
ServerTimeRequest::ServerTimeRequest(const ServerTimeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&clientid_, &from.clientid_,
    static_cast<size_t>(reinterpret_cast<char*>(&servertime_) -
    reinterpret_cast<char*>(&clientid_)) + sizeof(servertime_));
  // @@protoc_insertion_point(copy_constructor:ProtobufMessage.ServerTimeRequest)
}

void ServerTimeRequest::SharedCtor() {
  ::memset(&clientid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&servertime_) -
      reinterpret_cast<char*>(&clientid_)) + sizeof(servertime_));
  _cached_size_ = 0;
}

ServerTimeRequest::~ServerTimeRequest() {
  // @@protoc_insertion_point(destructor:ProtobufMessage.ServerTimeRequest)
  SharedDtor();
}

void ServerTimeRequest::SharedDtor() {
}

void ServerTimeRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ServerTimeRequest::descriptor() {
  ::protobuf_ProtoMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ServerTimeRequest& ServerTimeRequest::default_instance() {
  ::protobuf_ProtoMessage_2eproto::InitDefaultsServerTimeRequest();
  return *internal_default_instance();
}


void ServerTimeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtobufMessage.ServerTimeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&clientid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&servertime_) -
      reinterpret_cast<char*>(&clientid_)) + sizeof(servertime_));
  _internal_metadata_.Clear();
}

bool ServerTimeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtobufMessage.ServerTimeRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 clientID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &clientid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 clienttime = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &clienttime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 servertime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &servertime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtobufMessage.ServerTimeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtobufMessage.ServerTimeRequest)
  return false;
#undef DO_
}

void ServerTimeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtobufMessage.ServerTimeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 clientID = 1;
  if (this->clientid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->clientid(), output);
  }

  // int32 clienttime = 2;
  if (this->clienttime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->clienttime(), output);
  }

  // int32 servertime = 3;
  if (this->servertime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->servertime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtobufMessage.ServerTimeRequest)
}

::google::protobuf::uint8* ServerTimeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtobufMessage.ServerTimeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 clientID = 1;
  if (this->clientid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->clientid(), target);
  }

  // int32 clienttime = 2;
  if (this->clienttime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->clienttime(), target);
  }

  // int32 servertime = 3;
  if (this->servertime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->servertime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtobufMessage.ServerTimeRequest)
  return target;
}

size_t ServerTimeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtobufMessage.ServerTimeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 clientID = 1;
  if (this->clientid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->clientid());
  }

  // int32 clienttime = 2;
  if (this->clienttime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->clienttime());
  }

  // int32 servertime = 3;
  if (this->servertime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->servertime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ServerTimeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtobufMessage.ServerTimeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ServerTimeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ServerTimeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtobufMessage.ServerTimeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtobufMessage.ServerTimeRequest)
    MergeFrom(*source);
  }
}

void ServerTimeRequest::MergeFrom(const ServerTimeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtobufMessage.ServerTimeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.clientid() != 0) {
    set_clientid(from.clientid());
  }
  if (from.clienttime() != 0) {
    set_clienttime(from.clienttime());
  }
  if (from.servertime() != 0) {
    set_servertime(from.servertime());
  }
}

void ServerTimeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtobufMessage.ServerTimeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ServerTimeRequest::CopyFrom(const ServerTimeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtobufMessage.ServerTimeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ServerTimeRequest::IsInitialized() const {
  return true;
}

void ServerTimeRequest::Swap(ServerTimeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ServerTimeRequest::InternalSwap(ServerTimeRequest* other) {
  using std::swap;
  swap(clientid_, other->clientid_);
  swap(clienttime_, other->clienttime_);
  swap(servertime_, other->servertime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ServerTimeRequest::GetMetadata() const {
  protobuf_ProtoMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ProtobufMessage
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtobufMessage::UDPMessage* Arena::Create< ::ProtobufMessage::UDPMessage >(Arena* arena) {
  return Arena::CreateInternal< ::ProtobufMessage::UDPMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtobufMessage::LockStepMessage_Input* Arena::Create< ::ProtobufMessage::LockStepMessage_Input >(Arena* arena) {
  return Arena::CreateInternal< ::ProtobufMessage::LockStepMessage_Input >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtobufMessage::LockStepMessage* Arena::Create< ::ProtobufMessage::LockStepMessage >(Arena* arena) {
  return Arena::CreateInternal< ::ProtobufMessage::LockStepMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtobufMessage::SnapShotMessage_Objectstate* Arena::Create< ::ProtobufMessage::SnapShotMessage_Objectstate >(Arena* arena) {
  return Arena::CreateInternal< ::ProtobufMessage::SnapShotMessage_Objectstate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtobufMessage::SnapShotMessage* Arena::Create< ::ProtobufMessage::SnapShotMessage >(Arena* arena) {
  return Arena::CreateInternal< ::ProtobufMessage::SnapShotMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtobufMessage::SnapShotInputMessage* Arena::Create< ::ProtobufMessage::SnapShotInputMessage >(Arena* arena) {
  return Arena::CreateInternal< ::ProtobufMessage::SnapShotInputMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtobufMessage::UDPMessageSnapshot* Arena::Create< ::ProtobufMessage::UDPMessageSnapshot >(Arena* arena) {
  return Arena::CreateInternal< ::ProtobufMessage::UDPMessageSnapshot >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtobufMessage::StateMessage_Input* Arena::Create< ::ProtobufMessage::StateMessage_Input >(Arena* arena) {
  return Arena::CreateInternal< ::ProtobufMessage::StateMessage_Input >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtobufMessage::StateMessage_Objectstate* Arena::Create< ::ProtobufMessage::StateMessage_Objectstate >(Arena* arena) {
  return Arena::CreateInternal< ::ProtobufMessage::StateMessage_Objectstate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtobufMessage::StateMessage* Arena::Create< ::ProtobufMessage::StateMessage >(Arena* arena) {
  return Arena::CreateInternal< ::ProtobufMessage::StateMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtobufMessage::UDPStringMessage* Arena::Create< ::ProtobufMessage::UDPStringMessage >(Arena* arena) {
  return Arena::CreateInternal< ::ProtobufMessage::UDPStringMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtobufMessage::StateACKPacket* Arena::Create< ::ProtobufMessage::StateACKPacket >(Arena* arena) {
  return Arena::CreateInternal< ::ProtobufMessage::StateACKPacket >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtobufMessage::TCPMessage* Arena::Create< ::ProtobufMessage::TCPMessage >(Arena* arena) {
  return Arena::CreateInternal< ::ProtobufMessage::TCPMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtobufMessage::PredictionReconciliationMessage_Input* Arena::Create< ::ProtobufMessage::PredictionReconciliationMessage_Input >(Arena* arena) {
  return Arena::CreateInternal< ::ProtobufMessage::PredictionReconciliationMessage_Input >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtobufMessage::PredictionReconciliationMessage_Objectstate* Arena::Create< ::ProtobufMessage::PredictionReconciliationMessage_Objectstate >(Arena* arena) {
  return Arena::CreateInternal< ::ProtobufMessage::PredictionReconciliationMessage_Objectstate >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtobufMessage::PredictionReconciliationMessage* Arena::Create< ::ProtobufMessage::PredictionReconciliationMessage >(Arena* arena) {
  return Arena::CreateInternal< ::ProtobufMessage::PredictionReconciliationMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtobufMessage::PredictionReconciliationInputMessage_Input* Arena::Create< ::ProtobufMessage::PredictionReconciliationInputMessage_Input >(Arena* arena) {
  return Arena::CreateInternal< ::ProtobufMessage::PredictionReconciliationInputMessage_Input >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtobufMessage::PredictionReconciliationInputMessage* Arena::Create< ::ProtobufMessage::PredictionReconciliationInputMessage >(Arena* arena) {
  return Arena::CreateInternal< ::ProtobufMessage::PredictionReconciliationInputMessage >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtobufMessage::ServerTimeRequest* Arena::Create< ::ProtobufMessage::ServerTimeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::ProtobufMessage::ServerTimeRequest >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
